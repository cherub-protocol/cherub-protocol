{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["accounts","window","location","origin","require","Content","Layout","Footer","Header","Option","Select","Step","Steps","Title","Typography","Direction","Long","long","Short","short","CHERUB","exchanges","find","x","symbol","SOL","githubUrl","network","clusterApiUrl","opts","showBanner","wallets","getPhantomWallet","getSolletWallet","getSlopeWallet","DEFAULT_NAME","getWindowRoute","chartOptions","scales","display","grid","y","plugins","legend","daoProposals","title","description","icon","className","treasuryData","labels","datasets","data","fill","borderColor","backgroundColor","tvdData","routes","href","split","length","indexOf","App","useState","balance","setBalance","blockHeight","setBlockHeight","blockHeightInterval","setBlockHeightInterval","bondDeposit","setBondDeposit","cCirculatingSupplyTotal","setCCirculatingSupplyTotal","cCurrentPrice","setCCurrentPrice","cMarketCap","setCMarketCap","change24H","setChange24H","setCountdown","countdownInterval","setCountdownInterval","currentMarket","setCurrentMarket","exchangeRate","setExchangeRate","fundingRate","setFundingRate","gasFee","high24H","setHigh24H","isInverseAssetModalVisible","setIsInverseAssetModalVisible","isInverseDataSet","setIsInverseSet","indexPrice","setIndexPrice","leverage","setLeverage","low24H","setLow24H","menu","setMenu","daoCard","setDAOCard","stakeCard","setStakeCard","stakeDeposit","setStakeDeposit","stakeStep","setStakeStep","tokenCount","setTokenCount","inverseAsset","setInverseAsset","inverseCard","setInverseCard","inverseDirection","setInverseDirection","inverseQuantity","setInverseQuantity","inverseStep","setInverseStep","turnaround24H","setTurnaround24H","wallet","useWallet","getProviderCallback","useCallback","getProvider","getBalanceCallback","connected","publicKey","getDashboardDataCallback","getFactoryDataCallback","getInverseDataCallback","getInverseData","a","connection","Connection","Provider","provider","inverseExchange","token","getBalance","LAMPORTS_PER_SOL","tokenV","Token","PublicKey","TOKEN_PROGRAM_ID","getAccountInfo","walletV","accountVInfo","getMintInfo","mintVInfo","amount","toNumber","decimals","toFixed","factory","Program","factoryIdl","metadata","address","account","factoryData","fetch","console","log","exchange","exchangeIdl","tokenC","mintC","tokenS","mintS","mintCInfo","mintSInfo","supply","total","exchangeData","exchangeDataAccount","lastPrice","networkErrorMessage","message","info","setDummyInverseData","marketIndex","Math","random","asset","exchangePublicKey","exchangeAccount","mintAPublicKey","mintA","tokenA","mintAInfo","exchangeTokenAccountA","exchangeTokenAccountB","tokenB","getAssociatedTokenAddress","ASSOCIATED_TOKEN_PROGRAM_ID","walletTokenAccountA","walletA","walletTokenAccountB","walletB","findProgramAddress","Buffer","from","utils","bytes","utf8","encode","programId","pda","aToBAmountA","BN","equityA","exchangePositionAccount","Keypair","generate","rpc","aToBInput","Date","now","authority","clock","SYSVAR_CLOCK_PUBKEY","exchangeA","exchangeB","position","recipient","systemProgram","SystemProgram","tokenProgram","userA","userB","signers","tx","link","notification","open","rel","target","duration","placement","walletTokenAccountC","walletC","walletTokenAccountV","amountA","minC","amountB","bond","exchangeV","mint","userC","userV","owner","walletTokenAccountS","walletS","amountC","stake","factoryC","userS","settingsMenu","Item","onClick","assetTitleModal","type","inverseStatsBar","span","level","inverseQuantityDescription","approveDescription","leverageDescription","inverseView","bordered","extra","value","placeholder","addonAfter","defaultValue","onChange","e","Group","optionType","buttonStyle","Button","min","onAfterChange","size","disabled","direction","current","bondView","stakeDescription","toUpperCase","stakeView","daoView","height","options","itemLayout","dataSource","renderItem","item","Meta","useEffect","then","setInterval","getEpochInfo","epochInfo","today","deadline","setHours","delta","getTime","hours","floor","mins","secs","slice","calculateCountdown","closable","src","alt","key","selectedKeys","mode","toString","substr","document","getElementsByClassName","click","overlay","footer","visible","onCancel","forcerender","AppWithProvider","endpoint","autoConnect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5790ff8b.chunk.js","sourcesContent":["import {\n  Alert, Button, Card, Col, Dropdown, Input, Layout, List, Modal, Menu, Radio, Row, Select, Slider, Steps, Typography, message,\n  notification\n} from 'antd';\nimport { CheckCircleOutlined, ClockCircleOutlined, CloseCircleOutlined, DownOutlined, SettingOutlined } from '@ant-design/icons';\nimport { BN, Program, Provider, utils } from '@project-serum/anchor';\nimport { useEffect, useCallback, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { ConnectionProvider, WalletProvider, useWallet  } from '@solana/wallet-adapter-react';\nimport { WalletModalProvider, WalletMultiButton } from '@solana/wallet-adapter-react-ui';\nimport { getPhantomWallet, getSlopeWallet, getSolletWallet } from '@solana/wallet-adapter-wallets';\nimport { Connection, Keypair, PublicKey, SystemProgram, SYSVAR_CLOCK_PUBKEY, LAMPORTS_PER_SOL, clusterApiUrl } from '@solana/web3.js';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\n\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nimport exchangeIdl from './exchange.json';\nimport factoryIdl from './factory.json';\n\nvar accounts = {};\n\nif (window.location.origin === 'http://127.0.0.1:3000') {\n  accounts = require('./accounts-localnet.json');\n} else {\n  accounts = require('./accounts-devnet.json');\n}\n\nconst { Content, Footer, Header } = Layout;\nconst { Option } = Select;\nconst { Step } = Steps;\nconst { Title } = Typography;\n\nconst Direction = {\n  Long: { long: {} },\n  Short: { short: {} },\n};\n\nconst CHERUB = accounts.exchanges.find((x) => x.symbol === 'CHRB');\nconst SOL = accounts.exchanges.find((x) => x.symbol === 'SOL');\nconst githubUrl = 'https://www.github.com/cherub-so/cherub-protocol';\nconst logoText = 'cheruβ';\nconst network = window.location.origin === 'http://127.0.0.1:3000' ? 'http://127.0.0.1:8899' : clusterApiUrl('devnet');\nconst opts = { preflightCommitment: 'processed' };\nconst showBanner = network !== 'http://127.0.0.1:8899';\nconst wallets = [getPhantomWallet(), getSolletWallet(), getSlopeWallet()];\n\nconst DEFAULT_NAME = getWindowRoute() === 'stake' ? CHERUB.symbol : SOL.symbol;\n\nconst chartOptions = {\n  scales: {\n    x: {\n      display: true,\n      grid: {\n        display: false\n      },\n    },\n    y: {\n      display: true,\n      grid: {\n        display: false\n      },\n    }\n  },\n  plugins: {\n    legend: { display: false }\n  }\n}\n\nconst daoProposals = [{\n  title: 'Move SOL/COPE stake to SOL/MANGO',\n  description: '4 • September 25th, 2021',\n  icon: <ClockCircleOutlined className='ClockCircleOutlined'/>\n}, {\n  title: 'Contributor Grant: Tim Su',\n  description: '3 • Executed September 12th, 2021',\n  icon: <CheckCircleOutlined className='CheckCircleOutlined'/>\n}, {\n  title: 'Add AAVE, SUSHI, YFI',\n  description: '2 • Executed September 2nd, 2021',\n  icon: <CloseCircleOutlined className='CloseCircleOutlined'/>\n}, {\n  title: 'Set Pause Guardian to Community Multi-Sig',\n  description: '1 • Executed September 1st, 2021',\n  icon: <CheckCircleOutlined className='CheckCircleOutlined'/>\n}];\n\nconst treasuryData = {\n  labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n  datasets: [{\n    data: [0, 7, 6, 10, 24, 51, 54, 176],\n    fill: true,\n    borderColor: '#40a9ff',\n    backgroundColor: '#69c0ff',\n  }]\n};\n\nconst tvdData = {\n  labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n  datasets: [{\n    data: [0, 5, 10, 33, 35, 51, 54, 76],\n    fill: true,\n    borderColor: '#40a9ff',\n    backgroundColor: '#69c0ff'\n  }]\n};\n\nfunction getWindowRoute() {\n  const routes = ['dao', 'inverse', 'stake', 'bond'];\n  if (window.location.href.split('#/').length === 2 && routes.indexOf(window.location.href.split('#/')[1]) >= 0) {\n    return window.location.href.split('#/')[1];\n  } else {\n    // First route is default route\n    return routes[0];\n  }\n}\n\nfunction App() {\n  const [balance, setBalance] = useState(0);\n  const [blockHeight, setBlockHeight] = useState(0);\n  const [blockHeightInterval, setBlockHeightInterval] = useState(false);\n  const [bondDeposit, setBondDeposit] = useState();\n  const [cCirculatingSupplyTotal, setCCirculatingSupplyTotal] = useState('0 / 0');\n  const [cCurrentPrice, setCCurrentPrice] = useState(0);\n  const [cMarketCap, setCMarketCap] = useState(0);\n  const [change24H, setChange24H] = useState();\n  // eslint-disable-next-line\n  const [countdown, setCountdown] = useState('');\n  const [countdownInterval, setCountdownInterval] = useState(false);\n  const [currentMarket, setCurrentMarket] = useState();\n  const [exchangeRate, setExchangeRate] = useState(0);\n  const [fundingRate, setFundingRate] = useState();\n  // eslint-disable-next-line\n  const [gasFee, setGasFee] = useState();\n  const [high24H, setHigh24H] = useState();\n  const [isInverseAssetModalVisible, setIsInverseAssetModalVisible] = useState(false);\n  const [isInverseDataSet, setIsInverseSet] = useState(false);\n  const [indexPrice, setIndexPrice] = useState();\n  const [leverage, setLeverage] = useState(1);\n  const [low24H, setLow24H] = useState();\n  const [menu, setMenu] = useState('');\n  const [daoCard, setDAOCard] = useState('statistics');\n  const [stakeCard, setStakeCard] = useState('stake');\n  const [stakeDeposit, setStakeDeposit] = useState();\n  const [stakeStep, setStakeStep] = useState(0);\n  const [tokenCount, setTokenCount] = useState(0);\n  const [inverseAsset, setInverseAsset] = useState(DEFAULT_NAME);\n  const [inverseCard, setInverseCard] = useState('inverse');\n  const [inverseDirection, setInverseDirection] = useState('long');\n  const [inverseQuantity, setInverseQuantity] = useState();\n  const [inverseStep, setInverseStep] = useState(0);\n  const [turnaround24H, setTurnaround24H] = useState();\n\n  const wallet = useWallet();\n\n  const getProviderCallback = useCallback(getProvider, [getProvider]);\n\n  const getBalanceCallback = useCallback(getBalance, [getProviderCallback, inverseAsset, wallet.connected, wallet.publicKey]);\n  const getDashboardDataCallback = useCallback(getDashboardData, [getProviderCallback]);\n  const getFactoryDataCallback = useCallback(getFactoryData, [getProviderCallback]);\n  const getInverseDataCallback = useCallback(getInverseData, [getProviderCallback]);\n\n  async function getProvider() {\n    const connection = new Connection(network, opts.preflightCommitment);\n    return new Provider(connection, wallet, opts.preflightCommitment);\n  }\n\n  async function getBalance() {\n    const provider = await getProviderCallback();\n    const inverseExchange = accounts.exchanges.find((x) => x.symbol === inverseAsset);\n    if (wallet.connected) {\n      if (inverseExchange.token === SOL.token) {\n        const balance = await provider.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      } else {\n        const tokenV = new Token(provider.connection, new PublicKey(inverseExchange.token), TOKEN_PROGRAM_ID);\n        const accountVInfo = await tokenV.getAccountInfo(new PublicKey(inverseExchange.walletV));\n        const mintVInfo = await tokenV.getMintInfo();\n        setBalance((accountVInfo.amount.toNumber() / (1 ** mintVInfo.decimals)).toFixed(2));\n      }\n    }\n  }\n\n  async function getFactoryData() {\n    const provider = await getProviderCallback();\n    const factory = new Program(factoryIdl, new PublicKey(factoryIdl.metadata.address), provider);\n    try {\n      const account = await factory.account.factoryData.fetch(new PublicKey(accounts.factory));\n      setTokenCount(account.tokenCount.toNumber());\n    } catch (err) {\n      console.log('Transaction error: ', err);\n    }\n  }\n\n  async function getDashboardData() {\n    const provider = await getProviderCallback();\n    const exchange = new Program(exchangeIdl, new PublicKey(exchangeIdl.metadata.address), provider);\n    try {\n      const tokenC = new Token(provider.connection, new PublicKey(accounts.mintC), TOKEN_PROGRAM_ID);\n      const tokenS = new Token(provider.connection, new PublicKey(accounts.mintS), TOKEN_PROGRAM_ID);\n      const mintCInfo = await tokenC.getMintInfo();\n      const mintSInfo = await tokenS.getMintInfo();\n      const supply = mintSInfo.supply.toNumber() / (1 ** mintSInfo.decimals);\n      const total = mintCInfo.supply.toNumber() / (1 ** mintCInfo.decimals);\n      setCCirculatingSupplyTotal(supply.toFixed(0) + ' / ' + total.toFixed(0));\n      const exchangeDataAccount = await exchange.account.exchangeData.fetch(new PublicKey(CHERUB.exchange));\n      const lastPrice = (exchangeDataAccount.lastPrice.toNumber() / (mintCInfo.decimals * 10)).toFixed(2);\n      setCCurrentPrice((lastPrice / 1).toFixed(0));\n      setCMarketCap((lastPrice / 1).toFixed(0));\n    } catch (err) {\n      console.log('Transaction error: ', err);\n    }\n  }\n\n  function networkErrorMessage() {\n    message.info('Unable to connect to network');\n  }\n\n  function setDummyInverseData(lastPrice) {\n    const marketIndex = lastPrice * (Math.random() / 100 + 0.9);\n    setChange24H('+' + (lastPrice > 0 ? (Math.random() / 100 + 2).toFixed(2) : 0) + '%');\n    setCurrentMarket(lastPrice);\n    setFundingRate(lastPrice > 0 ? ((lastPrice - marketIndex) / 1000).toFixed(4) : 0);\n    setHigh24H((lastPrice * (Math.random() / 100 + 1.1)).toFixed(2));\n    setIndexPrice(marketIndex.toFixed(2));\n    setLow24H((lastPrice * (Math.random() / 100 + 0.9)).toFixed(2));\n    setTurnaround24H((lastPrice * (Math.random() * 10000 + 1.3)).toFixed(0));\n  }\n\n  async function getInverseData(asset) {\n    const provider = await getProviderCallback();\n    const exchangePublicKey = new PublicKey(accounts.exchanges.find((x) => x.symbol === asset).exchange);\n    const exchange = new Program(exchangeIdl, new PublicKey(exchangeIdl.metadata.address), provider);\n\n    try {\n      const exchangeAccount = await exchange.account.exchangeData.fetch(exchangePublicKey);\n      const mintAPublicKey = accounts.exchanges.find((x) => x.symbol === asset).mintA;\n      const tokenA = new Token(provider.connection, new PublicKey(mintAPublicKey), TOKEN_PROGRAM_ID, null);\n      const mintAInfo = await tokenA.getMintInfo();\n      const lastPrice = (exchangeAccount.lastPrice.toNumber() / (1 ** mintAInfo.decimals)).toFixed(2);\n\n      setDummyInverseData(lastPrice);\n      setExchangeRate(lastPrice);\n    } catch (err) {\n      console.log('Transaction error: ', err);\n    }\n\n    setInverseStep(0);\n    setInverseQuantity();\n  }\n\n  async function approveInverse() {\n    const provider = await getProviderCallback();\n\n    const inverseExchange = accounts.exchanges.find((x) => x.symbol === inverseAsset);\n\n    const exchange = new Program(exchangeIdl, new PublicKey(exchangeIdl.metadata.address), provider);\n    const exchangePublicKey = new PublicKey(inverseExchange.exchange);\n\n    const tokenA = new Token(provider.connection, new PublicKey(inverseExchange.mintA), TOKEN_PROGRAM_ID, null);\n    const mintAInfo = await tokenA.getMintInfo();\n    const exchangeTokenAccountA = inverseExchange.tokenA;\n    const exchangeTokenAccountB = inverseExchange.tokenB;\n\n    // eslint-disable-next-line\n    const walletAssociatedAccountX = await Token.getAssociatedTokenAddress(\n      ASSOCIATED_TOKEN_PROGRAM_ID,\n      TOKEN_PROGRAM_ID,\n      wallet.publicKey,\n      wallet.publicKey\n    );\n\n    // eslint-disable-next-line\n    const associatedTokenAccountA = await Token.getAssociatedTokenAddress(\n      ASSOCIATED_TOKEN_PROGRAM_ID,\n      TOKEN_PROGRAM_ID,\n      wallet.publicKey,\n      wallet.publicKey\n    );\n    // TODO: Make PDA\n    const walletTokenAccountA = inverseExchange.walletA;\n    const walletTokenAccountB = inverseExchange.walletB;\n\n    // eslint-disable-next-line\n    const [pda, nonce] = await PublicKey.findProgramAddress([Buffer.from(utils.bytes.utf8.encode('exchange'))], exchange.programId);\n    const aToBAmountA = new BN(inverseQuantity * leverage * (1 ** mintAInfo.decimals));\n    const equityA = new BN(inverseQuantity * (1 ** mintAInfo.decimals));\n\n    // TODO: Make PDA\n    const exchangePositionAccount = Keypair.generate();\n\n    try {\n      const tx = await exchange.rpc.aToBInput(\n        aToBAmountA,\n        new BN(Date.now() + 5000 / 1000),\n        inverseDirection === 'long' ? Direction.Long : Direction.Short,\n        equityA,\n        {\n          accounts: {\n            authority: provider.wallet.publicKey,\n            clock: SYSVAR_CLOCK_PUBKEY,\n            exchange: exchangePublicKey,\n            exchangeA: exchangeTokenAccountA,\n            exchangeB: exchangeTokenAccountB,\n            pda,\n            position: exchangePositionAccount.publicKey,\n            recipient: walletTokenAccountA,\n            systemProgram: SystemProgram.programId,\n            tokenProgram: TOKEN_PROGRAM_ID,\n            userA: walletTokenAccountA,\n            userB: walletTokenAccountB\n          },\n          signers: [exchangePositionAccount]\n        });\n\n      const link = 'https://explorer.solana.com/tx/' + tx;\n\n      notification.open({\n        message: 'Order Successfully Placed',\n        description: <div>Your transaction signature is <a href={link} rel='noreferrer' target='_blank'><code>{tx}</code></a></div>,\n        duration: 0,\n        placement: 'bottomLeft'\n      });\n\n      setInverseStep(0);\n      setLeverage(1);\n      setInverseQuantity();\n\n      getInverseDataCallback(inverseExchange.symbol);\n    } catch (err) {\n      console.log('Transaction error: ', err);\n    }\n  }\n\n  async function approveBond() {\n    const provider = await getProviderCallback();\n\n    const inverseExchange = accounts.exchanges.find((x) => x.symbol === inverseAsset);\n    const exchange = new Program(exchangeIdl, new PublicKey(exchangeIdl.metadata.address), provider);\n    const tokenA = new Token(provider.connection, new PublicKey(inverseExchange.mintA), TOKEN_PROGRAM_ID);\n    const mintAInfo = await tokenA.getMintInfo();\n\n    // TODO: Do not pull from accounts file but get from browser via PDA\n    // eslint-disable-next-line\n    const walletAssociatedAccountX = await Token.getAssociatedTokenAddress(\n      ASSOCIATED_TOKEN_PROGRAM_ID,\n      TOKEN_PROGRAM_ID,\n      wallet.publicKey,\n      wallet.publicKey\n    );\n    const walletTokenAccountA = inverseExchange.walletA;\n    const walletTokenAccountB = inverseExchange.walletB;\n    const walletTokenAccountC = accounts.walletC;\n    const walletTokenAccountV = inverseExchange.walletV;\n\n    // eslint-disable-next-line\n    const [pda, nonce] = await PublicKey.findProgramAddress(\n      [Buffer.from(utils.bytes.utf8.encode('exchange'))],\n      exchange.programId\n    );\n    const amountA = new BN(bondDeposit * (1 ** mintAInfo.decimals));\n    const amountB = amountA / 2;\n    // TODO: Calculate this correctly\n    const minC = amountB * (1 ** 9) / 3;\n\n    try {\n      const tx = await exchange.rpc.bond(\n        new BN(amountA),\n        new BN(amountB),\n        new BN(minC),\n        new BN(Date.now() + 5000 / 1000), {\n          accounts: {\n            authority: provider.wallet.publicKey,\n            clock: SYSVAR_CLOCK_PUBKEY,\n            exchange: inverseExchange.exchange,\n            exchangeA: inverseExchange.walletA,\n            exchangeB: inverseExchange.walletB,\n            exchangeV: inverseExchange.walletV,\n            mint: new PublicKey(accounts.mintC),\n            tokenProgram: TOKEN_PROGRAM_ID,\n            userA: walletTokenAccountA,\n            userB: walletTokenAccountB,\n            userC: walletTokenAccountC,\n            userV: walletTokenAccountV\n          },\n          signers: [provider.wallet.owner]\n        });\n      const link = 'https://explorer.solana.com/tx/' + tx;\n\n      notification.open({\n        message: 'Order Successfully Placed',\n        description: <div>Your transaction signature is <a href={link} rel='noreferrer' target='_blank'><code>{tx}</code></a></div>,\n        duration: 0,\n        placement: 'bottomLeft'\n      });\n\n      setInverseStep(0);\n      setLeverage(1);\n      setInverseQuantity();\n\n      getInverseDataCallback(inverseExchange.symbol);\n    } catch (err) {\n      console.log('Transaction error: ', err);\n    }\n  }\n\n  async function approveStake() {\n    const provider = await getProviderCallback();\n    const factory = new Program(factoryIdl, new PublicKey(factoryIdl.metadata.address), provider);\n\n    const tokenC = new Token(provider.connection, new PublicKey(accounts.mintC), TOKEN_PROGRAM_ID);\n    const tokenS = new Token(provider.connection, new PublicKey(accounts.mintS), TOKEN_PROGRAM_ID);\n    const mintCInfo = await tokenC.getMintInfo();\n\n    // TODO: Do not pull from accounts file but get from browser via PDA\n    // eslint-disable-next-line\n    const walletAssociatedAccountX = await Token.getAssociatedTokenAddress(\n      ASSOCIATED_TOKEN_PROGRAM_ID,\n      TOKEN_PROGRAM_ID,\n      wallet.publicKey,\n      wallet.publicKey\n    );\n    const walletTokenAccountC = accounts.walletC;\n    const walletTokenAccountS = accounts.walletS;\n\n    const amountC = new BN(stakeDeposit * (1 ** mintCInfo.decimals));\n\n    try {\n      const tx = await factory.rpc.stake(\n        new BN(amountC), {\n          accounts: {\n            authority: provider.wallet.publicKey,\n            factory: new PublicKey(accounts.factory),\n            factoryC: new PublicKey(accounts.factoryC),\n            mintS: tokenS.publicKey,\n            tokenProgram: TOKEN_PROGRAM_ID,\n            userS: walletTokenAccountS,\n            userC: walletTokenAccountC\n          },\n          signers: [provider.wallet.owner]\n        }\n      );\n      const link = 'https://explorer.solana.com/tx/' + tx;\n\n      notification.open({\n        message: 'Order Successfully Placed',\n        description: <div>Your transaction signature is <a href={link} rel='noreferrer' target='_blank'><code>{tx}</code></a></div>,\n        duration: 0,\n        placement: 'bottomLeft'\n      });\n\n      setStakeStep(0);\n      setStakeDeposit();\n    } catch (err) {\n      console.log('Transaction error: ', err);\n    }\n  }\n\n  // TODO: No longer needed with continuous funding, need to understand price oracle better\n  function calculateCountdown() {\n    // eslint-disable-next-line\n    const today = new Date();\n    // eslint-disable-next-line\n    const deadline = new Date();\n    deadline.setHours(24, 0, 0, 0);\n    // eslint-disable-next-line\n    const delta = deadline.getTime() - today.getTime();\n    // eslint-disable-next-line\n    const hours = Math.floor((delta % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    // eslint-disable-next-line\n    const mins = Math.floor((delta % (1000 * 60 * 60)) / (1000 * 60));\n    // eslint-disable-next-line\n    const secs = Math.floor((delta % (1000 * 60)) / 1000);\n    setCountdown(('0' + hours).slice(-2) + ':' + ('0' + mins).slice(-2) + ':' + ('0' + secs).slice(-2));\n  }\n\n  const settingsMenu = (\n    <Menu>\n      <Menu.Item key='github' onClick={() => window.open(githubUrl, '_blank')}>GitHub</Menu.Item>\n      <Menu.Item key='discord'>Discord</Menu.Item>\n    </Menu>\n  );\n\n  const assetTitleModal = (\n    <Button className='AssetTitleModal' type='link'\n      onClick={() => setIsInverseAssetModalVisible(true)}>{inverseAsset} <DownOutlined/></Button>\n  );\n\n  const inverseStatsBar = (\n    <Row className='InverseStatsBar'>\n      <Col span={3}></Col>\n      <Col span={3}>\n        <p><small>Market / Index</small></p>\n        <Title level={5} className='Title Dark Green'>{currentMarket}<span className='White'> / {indexPrice}</span></Title>\n      </Col>\n      <Col span={3}>\n        <p><small>24H Change</small></p>\n        <Title level={5} className='Title Dark Green'>{change24H}</Title>\n      </Col>\n      <Col span={3}>\n        <p><small>24H High</small></p>\n        <Title level={5} className='Title Dark'>{high24H}</Title>\n      </Col>\n      <Col span={3}>\n        <p><small>24H Low</small></p>\n        <Title level={5} className='Title Dark'>{low24H}</Title>\n      </Col>\n      <Col span={3}>\n        <p><small>24H Turnaround ({inverseAsset})</small></p>\n        <Title level={5} className='Title Dark'>{turnaround24H}</Title>\n      </Col>\n      <Col span={3}>\n        <p><small>Funding Rate</small></p>\n        <Title level={5} className='Title Dark'><span className='Yellow'>{fundingRate}</span></Title>\n      </Col>\n      <Col span={3}></Col>\n    </Row>\n  );\n\n  const inverseQuantityDescription = (\n    <small>\n      Your order amount of <span className='White'>{inverseQuantity > 0 ? (inverseQuantity / 1).toFixed(2) : 0} USD</span> equals <span\n        className='White'>{inverseQuantity > 0 ? (inverseQuantity / currentMarket).toFixed(2) : 0} {inverseAsset}</span>\n    </small>\n  );\n\n  const approveDescription = (\n    <small>This transaction requires <span className='White'>{gasFee > 0 ? (gasFee / 1).toFixed(2) : 0} SOL</span></small>\n  );\n\n  const leverageDescription = (\n    <small>\n      At <span className='White'>{leverage}x</span> leverage your position is worth <span className='White'>\n        {inverseQuantity > 0 ? (inverseQuantity / currentMarket * leverage).toFixed(2) : 0} {inverseAsset}</span>\n    </small>\n  );\n\n  const inverseView = (\n    <>\n      {inverseStatsBar}\n      <br/>\n      <Row>\n        <Col span={6}></Col>\n        { inverseCard === 'inverse' ?\n        <>\n          <Col span={8} className='Cards'>\n            <div className='site-card-border-less-wrapper'>\n              <Card title={assetTitleModal} className='Card Dark' bordered={false}\n                extra={<a href='/#/inverse' className='CardLink' onClick={() => setInverseCard('positions')}>Positions</a>}>\n                <p><strong>Quantity</strong></p>\n                <Input className='InverseInput Input Dark' value={inverseQuantity} placeholder='0'\n                  addonAfter={\n                    <Select defaultValue='USD' className='select-after'>\n                      <Option value='USD'>USD</Option>\n                    </Select>\n                  } onChange={(e) => {setInverseQuantity(e.target.value); setInverseStep(1)}} />\n                <br/>\n                <p>Your current exchange rate is 1 USD = {exchangeRate} {inverseAsset}</p>\n                <Radio.Group onChange={(e) => setInverseDirection(e.target.value)} className='RadioGroup Dark'\n                  optionType='button' buttonStyle='solid' value={inverseDirection}>\n                  <Radio.Button className='BuyButton' value='long'>Buy / Long</Radio.Button>\n                  <Radio.Button className='SellButton' value='short'>Sell / Short</Radio.Button>\n                </Radio.Group>\n                <br/>\n                <br/>\n                <p><strong>{leverage}x Leverage</strong></p>\n                <Slider defaultValue={1} min={1} onAfterChange={(e) => {setLeverage(e); setInverseStep(2)}} />\n                <br/>\n                <Button size='large' disabled={!wallet.connected} onClick={approveInverse} className='InverseButton Button Dark'\n                  type='ghost'>Approve</Button>\n              </Card>\n            </div>\n          </Col>\n          <Col span={1}></Col>\n          <Col span={3}>\n            <Steps direction='vertical' current={inverseStep}>\n              <Step key='set' title='Quantity' description={inverseQuantityDescription}/>\n              <Step key='collateral' title='Leverage' description={leverageDescription}/>\n              <Step key='order' title='Approve' description={approveDescription}/>\n            </Steps>\n          </Col>\n        </> :\n        <Col span={12} className='Cards'>\n          <div className='site-card-border-less-wrapper'>\n            <Card title={assetTitleModal} className='Card Dark' bordered={false}\n              extra={<a href='/#/inverse' className='CardLink' onClick={() => setInverseCard('inverse')}>Inverse</a>}>\n            </Card>\n          </div>\n        </Col>\n        }\n        <Col span={6}></Col>\n      </Row>\n    </>\n  );\n\n  const bondView = (\n    <Row>\n      <Col span={8}></Col>\n      <Col span={8} className='Cards'>\n        <div className='site-card-border-less-wrapper'>\n          <Card className='Card Dark' title={assetTitleModal} bordered={false}\n            extra={<a href='/#/bond' className='CardLink' onClick={(e) => {}}>Positions</a>}>\n            <Input className='StakeInput Input Dark' value={bondDeposit} placeholder='0'\n              onChange={(e) => setBondDeposit(e.target.value)} />\n            <br/>\n            <p>Your current balance is <strong>{balance > 0 ? (balance / 1).toFixed(2) : 0}</strong></p>\n            <Button size='large' disabled={!wallet.connected} className='ApproveButton Button Dark' type='ghost'\n              onClick={approveBond}>\n              Approve</Button>\n          </Card>\n        </div>\n      </Col>\n      <Col span={8}></Col>\n    </Row>\n  );\n\n  const stakeDescription = (\n    <small>\n      Your deposit of <span className='White'>{stakeDeposit > 0 ? (stakeDeposit / 1).toFixed(2) : 0} {CHERUB.symbol.toUpperCase()}</span>\n      is set to earn <span className='White'>12% APY</span>\n    </small>\n  );\n\n  const stakeView = (\n    <Row>\n      <Col span={6}></Col>\n      { stakeCard === 'stake' ?\n      <>\n        <Col span={4}>\n          <Steps direction='vertical' current={stakeStep}>\n            <Step key='set' title='Quantity' description={stakeDescription} />\n            <Step key='deposit' title='Approve' description={approveDescription} />\n          </Steps>\n        </Col>\n        <Col span={1}></Col>\n        <Col span={7} className='Cards'>\n          <div className='site-card-border-less-wrapper'>\n            <Card className='Card Dark' title={CHERUB.symbol} bordered={false}\n              extra={<a href='/#/stake' className='CardLink' onClick={() => setStakeCard('positions')}>Positions</a>}>\n              <Input className='StakeInput Input Dark' value={stakeDeposit} placeholder='0'\n                onChange={(e) => {setStakeStep(1); setStakeDeposit(e.target.value)}} />\n              <br/>\n              <p>Your current balance is <strong>{balance > 0 ? (balance / 1).toFixed(2) : 0}</strong></p>\n              <Button size='large' disabled={!wallet.connected} className='ApproveButton Button Dark' type='ghost' onClick={approveStake}>\n                Approve</Button>\n            </Card>\n          </div>\n        </Col>\n      </> :\n      <Col span={12} className='Cards'>\n        <Card className='Card Dark' title={CHERUB.symbol} bordered={false}\n          extra={<a href='/#/stake' className='CardLink' onClick={() => setStakeCard('stake')}>Stake</a>}>\n        </Card>\n      </Col>\n      }\n      <Col span={6}></Col>\n    </Row>\n  );\n\n  const daoView = (\n    <>\n      { daoCard === 'statistics' ?\n      <Row>\n        <Col span={2}></Col>\n        <Col span={20} className='Cards'>\n          <div className='site-card-border-less-wrapper'>\n            <Card className='Card Dark' title='DAO' bordered={false}\n              extra={<a href='/#/dao' className='CardLink' onClick={() => setDAOCard('vote')}>Vote</a>}>\n              <Row>\n                <Col span={6}>\n                  <p>Market Cap</p>\n                  <Title level={3} className='Title Dark'>{cMarketCap}</Title>\n                </Col>\n                <Col span={6}>\n                  <p>{CHERUB.symbol} Price</p>\n                  <Title level={3} className='Title Dark'>{cCurrentPrice}</Title>\n                </Col>\n                <Col span={6}>\n                  <p>Circulating Supply (Total)</p>\n                  <Title level={3} className='Title Dark'>{cCirculatingSupplyTotal}</Title>\n                </Col>\n                <Col span={6}>\n                  <p>Markets</p>\n                  <Title level={3} className='Title Dark'>{tokenCount}</Title>\n                </Col>\n              </Row>\n              <br/>\n              <Row>\n                <Col span={12}>\n                  <p>Total Value Deposited</p>\n                  <Line height={100} data={tvdData} options={chartOptions}/>\n                </Col>\n                <Col span={12}>\n                  <p>Market Value of Treasury Assets</p>\n                  <Line height={100} data={treasuryData} options={chartOptions}/>\n                </Col>\n              </Row>\n            </Card>\n          </div>\n        </Col>\n        <Col span={2}></Col>\n      </Row> :\n      <Row>\n        <Col span={2}></Col>\n        <Col span={20} className='Cards'>\n          <div className='site-card-border-less-wrapper'>\n            <Card className='Card Dark' title='DAO' bordered={false}\n              extra={<a href='/#/dao' className='CardLink' onClick={(e) => setDAOCard('statistics')}>Statistics</a>}>\n              <List itemLayout='horizontal' dataSource={daoProposals}\n                renderItem={item => (\n                  <List.Item><List.Item.Meta title={item.title} description={item.description} />{item.icon}</List.Item>\n                )}/>\n            </Card>\n          </div>\n        </Col>\n        <Col span={2}></Col>\n      </Row>\n      }\n    </>\n  );\n\n  useEffect(() => {\n    // TODO: This fires every second, minimize this\n    getBalanceCallback();\n    getDashboardDataCallback();\n    getFactoryDataCallback();\n\n    if (!isInverseDataSet) {\n      setIsInverseSet(true);\n      getInverseDataCallback(DEFAULT_NAME);\n    }\n  }, [getBalanceCallback, getDashboardDataCallback, getFactoryDataCallback, getInverseDataCallback, isInverseDataSet]);\n\n  useEffect(() => {\n    setMenu(getWindowRoute());\n  }, [setMenu]);\n\n  useEffect(() => {\n    getProviderCallback().then(function(provider) {\n      if (!blockHeightInterval) {\n        try {\n          setBlockHeightInterval(true);\n          setInterval(function () {\n            provider.connection.getEpochInfo().then(function(epochInfo) {\n              setBlockHeight(epochInfo.blockHeight);\n            });\n          }, 10000);\n        } catch (e) {\n          networkErrorMessage();\n        }\n      }\n    });\n  }, [blockHeightInterval, getProviderCallback]);\n\n  useEffect(() => {\n    if (!countdownInterval) {\n      try {\n        setCountdownInterval(true);\n        setInterval(function () {\n          calculateCountdown();\n        }, 1000);\n      } catch (e) {\n        networkErrorMessage();\n      }\n    }\n  }, [countdownInterval, setCountdownInterval]);\n\n  return (\n    <Layout className='App Dark'>\n      { showBanner ?\n      <Alert type='info' className='Banner' closable\n        message=<span>You are currently using an unaudited piece of software via {network}. Use at your own risk.</span> /> : null\n      }\n      <Header className='Header Dark'>\n        <Row>\n          <Col span={5}>\n            <div className='Logo Dark'>\n              <img src='/logo.svg' alt='Logo' className='LogoImage'/>\n              <strong className='LogoText' onClick={() => window.open(githubUrl, '_blank')}>{logoText}</strong>\n            </div>\n          </Col>\n          <Col span={14} className='ColCentered'>\n            <Menu className='Menu Dark' onClick={(e) => {setMenu(e.key); window.location.href = '/#/' + e.key}} selectedKeys={[menu]}\n              mode='horizontal'>\n              <Menu.Item key='dao'>DAO</Menu.Item>\n              <Menu.Item key='inverse'>Inverse Perpetuals</Menu.Item>\n              <Menu.Item key='bond'>Bond</Menu.Item>\n              <Menu.Item key='stake' onClick={() => {setInverseAsset(CHERUB.symbol)}}>Stake</Menu.Item>\n            </Menu>\n          </Col>\n          <Col span={5} className='ConnectWalletHeader'>\n            { !wallet.connected ?\n            <>\n              <WalletMultiButton className='WalletMultiButton'/>\n              <Button className='ConnectWalletButton' onClick={(e) => document.getElementsByClassName('WalletMultiButton')[0].click()}\n                type='link'>Connect Wallet</Button>\n            </> :\n            <Button className='ConnectWalletButton' type='link'>\n              <code className='SolCount'>{balance > 0 ? (balance / 1).toFixed(2) : 0 } {inverseAsset}</code>\n              <code>{wallet.publicKey.toString().substr(0, 4)}...{wallet.publicKey.toString().substr(-4)}</code>\n            </Button>\n            }\n            <Dropdown className='Dropdown SettingsDropdown' overlay={settingsMenu}><SettingOutlined/></Dropdown>\n          </Col>\n        </Row>\n      </Header>\n      <Layout className='Layout Dark'>\n        <Content>\n          <div>\n            <br/>\n            <br/>\n            { menu === 'inverse' ? inverseView : null }\n            { menu === 'stake' ? stakeView : null }\n            { menu === 'bond' ? bondView : null }\n            { menu === 'dao' ? daoView : null }\n          </div>\n        </Content>\n      </Layout>\n      <Footer className='Footer'><code className='BlockHeight'><small>• {blockHeight}</small></code></Footer>\n      <Modal title='Assets' footer={null} visible={isInverseAssetModalVisible} onCancel={() => {setIsInverseAssetModalVisible(false)}}>\n        <List itemLayout='horizontal' dataSource={accounts.exchanges} forcerender='true'\n          renderItem={exchange => (\n            <List.Item className='Asset ListItem'>\n              <List.Item.Meta title={exchange.symbol}\n                onClick={() => {setInverseAsset(exchange.symbol); getInverseData(exchange.symbol); setIsInverseAssetModalVisible(false)}}/>\n            </List.Item>\n          )}\n        />\n      </Modal>\n    </Layout>\n  );\n}\n\nconst AppWithProvider = () => (\n  <ConnectionProvider endpoint={network}>\n    <WalletProvider wallets={wallets} autoConnect>\n      <WalletModalProvider>\n        <App/>\n      </WalletModalProvider>\n    </WalletProvider>\n  </ConnectionProvider>\n);\n\nexport default AppWithProvider;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}