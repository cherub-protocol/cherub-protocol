{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Content","Layout","Footer","Header","Option","Select","Step","Steps","Title","Typography","IS_LOCALHOST","window","location","origin","accounts","CHERUB","require","exchanges","find","x","symbol","SOL","githubUrl","network","clusterApiUrl","opts","wallets","getPhantomWallet","getSolletWallet","getSlopeWallet","DEFAULT_SYMBOL","getWindowRoute","Direction","Long","long","Short","short","chartOptions","scales","display","grid","y","plugins","legend","daoProposals","description","icon","className","title","treasuryData","datasets","backgroundColor","borderColor","data","fill","labels","tvdData","currencyFormat","toFixed","replace","routes","href","split","length","indexOf","App","useState","balance","setBalance","blockHeight","setBlockHeight","bondDeposit","setBondDeposit","cCirculatingSupplyTotal","setCCirculatingSupplyTotal","cCurrentPrice","setCCurrentPrice","cMarketCap","setCMarketCap","change24H","setChange24H","countdown","setCountdown","accountV","tokenV","currentExchange","setCurrentExchange","currentMarketPrice","setCurrentMarketPrice","daoCard","setDAOCard","exchangeRate","setExchangeRate","fundingRate","setFundingRate","gasFee","high24H","setHigh24H","isBlockHeightIntervalSet","setIsBlockHeightIntervalSet","isCountdownIntervalSet","setIsCountdownIntervalSet","isInverseAssetModalVisible","setIsInverseAssetModalVisible","isInverseDataSet","setIsInverseSet","indexPrice","setIndexPrice","inverseAsset","setInverseAsset","inverseCard","setInverseCard","inverseDirection","setInverseDirection","inverseQuantity","setInverseQuantity","inverseStep","setInverseStep","leverage","setLeverage","low24H","setLow24H","menu","setMenu","stakeCard","setStakeCard","stakeDeposit","setStakeDeposit","stakeStep","setStakeStep","tokenCount","setTokenCount","turnaround24H","setTurnaround24H","wallet","useWallet","getProviderCallback","useCallback","getProvider","getBalanceCallback","publicKey","getBlockHeightCallback","then","provider","connection","getEpochInfo","epochInfo","getDashboardDataCallback","getFactoryDataCallback","getInverseDataCallback","getInverseData","a","Connection","Provider","getBalance","LAMPORTS_PER_SOL","Token","PublicKey","TOKEN_PROGRAM_ID","getAssociatedTokenAddress","ASSOCIATED_TOKEN_PROGRAM_ID","walletTokenAccountV","getAccountInfo","accountInfoV","getMintInfo","mintInfoV","amount","toNumber","decimals","console","log","factory","Program","factoryIdl","metadata","address","account","factoryData","fetch","exchange","exchangeIdl","tokenC","tokenS","mintInfoC","mintInfoS","supply","total","exchangeData","exchangeDataAccount","lastPrice","setDummyInverseData","marketIndex","Math","random","asset","exchangePublicKey","exchangeAccount","mintAPublicKey","tokenA","mintAInfo","tokenB","walletTokenAccountA","walletTokenAccountB","aToBAmountA","equityA","findProgramAddress","Buffer","from","utils","bytes","utf8","encode","programId","pda","exchangePositionAccount","Keypair","generate","rpc","aToBInput","BN","Date","now","authority","clock","SYSVAR_CLOCK_PUBKEY","exchangeA","accountA","exchangeB","accountB","position","recipient","systemProgram","SystemProgram","tokenProgram","userA","userB","signers","tx","link","message","rel","target","notification","open","duration","placement","mintInfoA","mintInfoB","walletTokenAccountC","maxAmountA","amountB","minLiquidityC","bond","exchangeV","mint","userC","userV","owner","walletTokenAccountS","amountC","stake","factoryC","accountC","mintS","userS","calculateCountdown","today","deadline","setHours","delta","getTime","hours","floor","mins","secs","slice","settingsMenu","Item","onClick","assetTitleModal","type","inverseStatsBar","span","level","inverseQuantityDescription","approveDescription","leverageDescription","inverseView","bordered","extra","value","placeholder","addonAfter","defaultValue","onChange","e","Group","optionType","buttonStyle","Button","min","onAfterChange","size","disabled","connected","direction","current","bondView","stakeDescription","toUpperCase","stakeView","daoView","height","options","itemLayout","dataSource","renderItem","item","Meta","useEffect","setInterval","token","src","alt","key","selectedKeys","mode","toString","substr","document","getElementsByClassName","click","overlay","footer","visible","onCancel","forcerender","AppWithProvider","endpoint","autoConnect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b91b3ef2.chunk.js","sourcesContent":["import 'antd/dist/antd.css';\nimport './App.css';\n\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\nimport { BN, Program, Provider, utils } from '@project-serum/anchor';\nimport { Alert, Button, Card, Col, Dropdown, Input, Layout, List, Modal, Menu, Radio, Row, Select, Slider, Steps, Typography, notification } from 'antd';\nimport { CheckCircleOutlined, ClockCircleOutlined, CloseCircleOutlined, DownOutlined, SettingOutlined } from '@ant-design/icons';\nimport { Connection, Keypair, LAMPORTS_PER_SOL, PublicKey, SYSVAR_CLOCK_PUBKEY, SystemProgram, clusterApiUrl } from '@solana/web3.js';\nimport { ConnectionProvider, WalletProvider, useWallet  } from '@solana/wallet-adapter-react';\nimport { Line } from 'react-chartjs-2';\nimport { WalletModalProvider, WalletMultiButton } from '@solana/wallet-adapter-react-ui';\nimport { getPhantomWallet, getSlopeWallet, getSolletWallet } from '@solana/wallet-adapter-wallets';\nimport { useEffect, useCallback, useState } from 'react';\n\nimport exchangeIdl from './exchange.json';\nimport factoryIdl from './factory.json';\n\nconst { Content, Footer, Header } = Layout;\nconst { Option } = Select;\nconst { Step } = Steps;\nconst { Title } = Typography;\n\nconst LOCALHOST = 'http://localhost:3000';\nconst LOCALNET = 'http://127.0.0.1:8899';\n\nconst IS_LOCALHOST = window.location.origin === LOCALHOST;\n\nlet accounts = {};\n\nif (IS_LOCALHOST) {\n  accounts = require('./accounts-localnet.json');\n} else {\n  accounts = require('./accounts-devnet.json');\n}\n\nconst CHERUB = accounts.exchanges.find((x) => x.symbol === 'CHRB');\nconst SOL = accounts.exchanges.find((x) => x.symbol === 'SOL');\nconst githubUrl = 'https://www.github.com/cherub-so/cherub-protocol';\nconst logoText = 'cheruβ';\nconst network = IS_LOCALHOST ? LOCALNET : clusterApiUrl('devnet');\nconst opts = { preflightCommitment: 'processed' };\nconst wallets = [getPhantomWallet(), getSolletWallet(), getSlopeWallet()];\n\nconst DEFAULT_SYMBOL = getWindowRoute() === 'stake' ? CHERUB.symbol : SOL.symbol;\n\nconst Direction = {\n  Long: { long: {} },\n  Short: { short: {} }\n};\n\nconst chartOptions = {\n  scales: {\n    x: {\n      display: true,\n      grid: { display: false }\n    },\n    y: {\n      display: true,\n      grid: { display: false }\n    }\n  },\n  plugins: {\n    legend: { display: false }\n  }\n}\n\nconst daoProposals = [{\n  description: '4 • September 25th, 2021',\n  icon: <ClockCircleOutlined className='ClockCircleOutlined'/>,\n  title: 'Move SOL/COPE stake to SOL/MANGO'\n}, {\n  description: '3 • Executed September 12th, 2021',\n  icon: <CheckCircleOutlined className='CheckCircleOutlined'/>,\n  title: 'Contributor Grant: Tim Su'\n}, {\n  description: '2 • Executed September 2nd, 2021',\n  icon: <CloseCircleOutlined className='CloseCircleOutlined'/>,\n  title: 'Add AAVE, SUSHI, YFI'\n}, {\n  description: '1 • Executed September 1st, 2021',\n  icon: <CheckCircleOutlined className='CheckCircleOutlined'/>,\n  title: 'Set Pause Guardian to Community Multi-Sig'\n}];\n\nconst treasuryData = {\n  datasets: [{\n    backgroundColor: '#69c0ff',\n    borderColor: '#40a9ff',\n    data: [0, 7, 6, 10, 24, 51, 54, 176],\n    fill: true\n  }],\n  labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun']\n};\n\nconst tvdData = {\n  labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n  datasets: [{\n    backgroundColor: '#69c0ff',\n    borderColor: '#40a9ff',\n    data: [0, 5, 10, 33, 35, 51, 54, 76],\n    fill: true\n  }]\n};\n\nfunction currencyFormat(x) {\n  return '$' + x.toFixed(0).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n}\n\nfunction getWindowRoute() {\n  const routes = ['dao', 'inverse', 'stake', 'bond'];\n  if (window.location.href.split('#/').length === 2 && routes.indexOf(window.location.href.split('#/')[1]) >= 0) {\n    return window.location.href.split('#/')[1];\n  } else {\n    // First route is default route\n    return routes[0];\n  }\n}\n\nfunction App() {\n  const [balance, setBalance] = useState(0);\n  const [blockHeight, setBlockHeight] = useState(0);\n  const [bondDeposit, setBondDeposit] = useState();\n  const [cCirculatingSupplyTotal, setCCirculatingSupplyTotal] = useState('0 / 0');\n  const [cCurrentPrice, setCCurrentPrice] = useState(0);\n  const [cMarketCap, setCMarketCap] = useState(0);\n  const [change24H, setChange24H] = useState();\n  const [countdown, setCountdown] = useState('');\n  const [currentExchange, setCurrentExchange] = useState({ accountV: null, tokenV: null, symbol: null });\n  const [currentMarketPrice, setCurrentMarketPrice] = useState();\n  const [daoCard, setDAOCard] = useState('statistics');\n  const [exchangeRate, setExchangeRate] = useState(0);\n  const [fundingRate, setFundingRate] = useState();\n  // eslint-disable-next-line\n  const [gasFee, setGasFee] = useState();\n  const [high24H, setHigh24H] = useState();\n  const [isBlockHeightIntervalSet, setIsBlockHeightIntervalSet] = useState(false);\n  const [isCountdownIntervalSet, setIsCountdownIntervalSet] = useState(false);\n  const [isInverseAssetModalVisible, setIsInverseAssetModalVisible] = useState(false);\n  const [isInverseDataSet, setIsInverseSet] = useState(false);\n  const [indexPrice, setIndexPrice] = useState();\n  const [inverseAsset, setInverseAsset] = useState(DEFAULT_SYMBOL);\n  const [inverseCard, setInverseCard] = useState('inverse');\n  const [inverseDirection, setInverseDirection] = useState('long');\n  const [inverseQuantity, setInverseQuantity] = useState();\n  const [inverseStep, setInverseStep] = useState(0);\n  const [leverage, setLeverage] = useState(1);\n  const [low24H, setLow24H] = useState();\n  const [menu, setMenu] = useState('');\n  const [stakeCard, setStakeCard] = useState('stake');\n  const [stakeDeposit, setStakeDeposit] = useState();\n  const [stakeStep, setStakeStep] = useState(0);\n  const [tokenCount, setTokenCount] = useState(0);\n  const [turnaround24H, setTurnaround24H] = useState();\n\n  const wallet = useWallet();\n\n  const getProviderCallback = useCallback(getProvider, [getProvider]);\n\n  const getBalanceCallback = useCallback(getBalance, [getProviderCallback, currentExchange.tokenV, wallet.publicKey]);\n  const getBlockHeightCallback = useCallback(getBlockHeight, [getProviderCallback]);\n  const getDashboardDataCallback = useCallback(getDashboardData, [getProviderCallback]);\n  const getFactoryDataCallback = useCallback(getFactoryData, [getProviderCallback]);\n  const getInverseDataCallback = useCallback(getInverseData, [getProviderCallback]);\n\n  async function getProvider() {\n    const connection = new Connection(network, opts.preflightCommitment);\n    return new Provider(connection, wallet, opts.preflightCommitment);\n  }\n\n  function getBlockHeight() {\n    getProviderCallback().then((provider) => {\n      provider.connection.getEpochInfo().then(function(epochInfo) {\n        setBlockHeight(epochInfo.blockHeight);\n      });\n    });\n  }\n\n  async function getBalance() {\n    try {\n      const provider = await getProviderCallback();\n      if (currentExchange.tokenV === SOL.tokenV) {\n        const balance = await provider.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      } else {\n        const tokenV = new Token(provider.connection, new PublicKey(currentExchange.tokenV), TOKEN_PROGRAM_ID);\n        const walletTokenAccountV = await Token.getAssociatedTokenAddress(\n          ASSOCIATED_TOKEN_PROGRAM_ID,\n          TOKEN_PROGRAM_ID,\n          tokenV.publicKey,\n          provider.wallet.publicKey\n        );\n        const accountInfoV = await tokenV.getAccountInfo(walletTokenAccountV);\n        const mintInfoV = await tokenV.getMintInfo();\n        setBalance((accountInfoV.amount.toNumber() / (10 ** mintInfoV.decimals)).toFixed(2));\n      }\n    } catch (err) {\n      console.log('Error: ', err);\n    }\n  }\n\n  async function getFactoryData() {\n    try {\n      const provider = await getProviderCallback();\n      const factory = new Program(factoryIdl, new PublicKey(factoryIdl.metadata.address), provider);\n      const account = await factory.account.factoryData.fetch(new PublicKey(accounts.factory.account));\n      setTokenCount(account.tokenCount.toNumber());\n    } catch (err) {\n      console.log('Error: ', err);\n    }\n  }\n\n  async function getDashboardData() {\n    try {\n      const provider = await getProviderCallback();\n      const exchange = new Program(exchangeIdl, new PublicKey(exchangeIdl.metadata.address), provider);\n\n      const tokenC = new Token(provider.connection, new PublicKey(accounts.factory.tokenC), TOKEN_PROGRAM_ID);\n      const tokenS = new Token(provider.connection, new PublicKey(accounts.factory.tokenS), TOKEN_PROGRAM_ID);\n      const mintInfoC = await tokenC.getMintInfo();\n      const mintInfoS = await tokenS.getMintInfo();\n      const supply = mintInfoS.supply.toNumber() / (10 ** mintInfoS.decimals);\n      const total = mintInfoC.supply.toNumber() / (10 ** mintInfoC.decimals);\n\n      setCCirculatingSupplyTotal(supply.toFixed(0) + ' / ' + total.toFixed(0));\n\n      const exchangeDataAccount = await exchange.account.exchangeData.fetch(new PublicKey(CHERUB.account));\n      const lastPrice = (exchangeDataAccount.lastPrice.toNumber() / (10 ** mintInfoC.decimals)).toFixed(2);\n\n      setCCurrentPrice(currencyFormat(lastPrice / 1));\n      setCMarketCap(currencyFormat(lastPrice * total));\n    } catch (err) {\n      console.log('Error: ', err);\n    }\n  }\n\n  function setDummyInverseData(lastPrice) {\n    const marketIndex = lastPrice * (Math.random() / 100 + 0.9);\n    setChange24H('+' + (lastPrice > 0 ? (Math.random() / 100 + 2).toFixed(2) : 0));\n    setCurrentMarketPrice(lastPrice);\n    setFundingRate(lastPrice > 0 ? ((lastPrice - marketIndex) / 1000).toFixed(4) : 0);\n    setHigh24H((lastPrice * (Math.random() / 100 + 1.1)).toFixed(2));\n    setIndexPrice(marketIndex.toFixed(2));\n    setLow24H((lastPrice * (Math.random() / 100 + 0.9)).toFixed(2));\n    setTurnaround24H((lastPrice * (Math.random() * 10000 + 1.3)).toFixed(0));\n  }\n\n  async function getInverseData(asset) {\n    try {\n      const provider = await getProviderCallback();\n      const exchangePublicKey = new PublicKey(accounts.exchanges.find((x) => x.symbol === asset).account);\n      const exchange = new Program(exchangeIdl, new PublicKey(exchangeIdl.metadata.address), provider);\n\n      const exchangeAccount = await exchange.account.exchangeData.fetch(exchangePublicKey);\n      const mintAPublicKey = accounts.exchanges.find((x) => x.symbol === asset).tokenA;\n      const tokenA = new Token(provider.connection, new PublicKey(mintAPublicKey), TOKEN_PROGRAM_ID, null);\n      const mintAInfo = await tokenA.getMintInfo();\n      const lastPrice = (exchangeAccount.lastPrice.toNumber() / (10 ** mintAInfo.decimals)).toFixed(2);\n\n      setDummyInverseData(lastPrice);\n      setExchangeRate(lastPrice);\n    } catch (err) {\n      console.log('Error: ', err);\n    }\n\n    setInverseStep(0);\n    setInverseQuantity();\n  }\n\n  async function approveInverse() {\n    let message;\n    let description;\n\n    try {\n      const provider = await getProviderCallback();\n      const exchange = new Program(exchangeIdl, new PublicKey(exchangeIdl.metadata.address), provider);\n      const exchangePublicKey = new PublicKey(currentExchange.account);\n\n      const tokenA = new Token(provider.connection, new PublicKey(currentExchange.tokenA), TOKEN_PROGRAM_ID);\n      const tokenB = new Token(provider.connection, new PublicKey(currentExchange.tokenB), TOKEN_PROGRAM_ID);\n      const mintAInfo = await tokenA.getMintInfo();\n\n      const walletTokenAccountA = await Token.getAssociatedTokenAddress(\n        ASSOCIATED_TOKEN_PROGRAM_ID,\n        TOKEN_PROGRAM_ID,\n        tokenA.publicKey,\n        provider.wallet.publicKey\n      );\n      const walletTokenAccountB = await Token.getAssociatedTokenAddress(\n        ASSOCIATED_TOKEN_PROGRAM_ID,\n        TOKEN_PROGRAM_ID,\n        tokenB.publicKey,\n        provider.wallet.publicKey\n      );\n\n      const aToBAmountA = inverseQuantity * leverage * (10 ** mintAInfo.decimals);\n      const equityA = inverseQuantity * (10 ** mintAInfo.decimals);\n      // eslint-disable-next-line\n      const [pda, nonce] = await PublicKey.findProgramAddress([Buffer.from(utils.bytes.utf8.encode('exchange'))], exchange.programId);\n      // TODO: Make PDA\n      const exchangePositionAccount = Keypair.generate();\n\n      const tx = await exchange.rpc.aToBInput(\n        new BN(aToBAmountA),\n        new BN(Date.now() + 5000 / 1000),\n        inverseDirection === 'long' ? Direction.Long : Direction.Short,\n        new BN(equityA),\n        {\n          accounts: {\n            authority: provider.wallet.publicKey,\n            clock: SYSVAR_CLOCK_PUBKEY,\n            exchange: exchangePublicKey,\n            exchangeA: currentExchange.accountA,\n            exchangeB: currentExchange.accountB,\n            pda,\n            position: exchangePositionAccount.publicKey,\n            recipient: walletTokenAccountA,\n            systemProgram: SystemProgram.programId,\n            tokenProgram: TOKEN_PROGRAM_ID,\n            userA: walletTokenAccountA,\n            userB: walletTokenAccountB\n          },\n          signers: [exchangePositionAccount]\n        });\n\n      const link = 'https://explorer.solana.com/tx/' + tx;\n\n      message = 'Order Successfully Placed';\n      description = (<div>Your transaction signature is <a href={link} rel='noreferrer' target='_blank'><code>{tx}</code></a></div>);\n\n      setInverseStep(0);\n      setLeverage(1);\n      setInverseQuantity();\n\n      getInverseDataCallback(currentExchange.symbol);\n    } catch (err) {\n      message = 'Order Error';\n      description = 'Transaction error';\n      console.log('Error: ', err);\n    }\n\n    notification.open({message: message, description: description, duration: 0, placement: 'bottomLeft'});\n  }\n\n  async function approveBond() {\n    let message;\n    let description;\n\n    try {\n      const provider = await getProviderCallback();\n      const exchange = new Program(exchangeIdl, new PublicKey(exchangeIdl.metadata.address), provider);\n\n      const tokenA = new Token(provider.connection, new PublicKey(currentExchange.tokenA), TOKEN_PROGRAM_ID);\n      const tokenB = new Token(provider.connection, new PublicKey(currentExchange.tokenB), TOKEN_PROGRAM_ID);\n      const tokenC = new Token(provider.connection, new PublicKey(accounts.factory.tokenC), TOKEN_PROGRAM_ID);\n      const tokenV = new Token(provider.connection, new PublicKey(currentExchange.tokenV), TOKEN_PROGRAM_ID);\n\n      const mintInfoA = await tokenA.getMintInfo();\n      const mintInfoB = await tokenB.getMintInfo();\n\n      const walletTokenAccountA = await Token.getAssociatedTokenAddress(\n        ASSOCIATED_TOKEN_PROGRAM_ID,\n        TOKEN_PROGRAM_ID,\n        tokenA.publicKey,\n        provider.wallet.publicKey\n      );\n      const walletTokenAccountB = await Token.getAssociatedTokenAddress(\n        ASSOCIATED_TOKEN_PROGRAM_ID,\n        TOKEN_PROGRAM_ID,\n        tokenB.publicKey,\n        provider.wallet.publicKey\n      );\n      const walletTokenAccountC = await Token.getAssociatedTokenAddress(\n        ASSOCIATED_TOKEN_PROGRAM_ID,\n        TOKEN_PROGRAM_ID,\n        tokenC.publicKey,\n        provider.wallet.publicKey\n      );\n\n      // TODO: SOL account is not associated token address\n      const walletTokenAccountV = await Token.getAssociatedTokenAddress(\n        ASSOCIATED_TOKEN_PROGRAM_ID,\n        TOKEN_PROGRAM_ID,\n        tokenV.publicKey,\n        provider.wallet.publicKey\n      );\n\n      // TODO: Not accurate\n      const maxAmountA = bondDeposit * (10 ** mintInfoA.decimals);\n      const amountB = (maxAmountA / (currentMarketPrice * (10 ** mintInfoA.decimals))) * (10 ** mintInfoB.decimals);\n      const minLiquidityC = amountB / 1000;\n      // eslint-disable-next-line\n      const [pda, nonce] = await PublicKey.findProgramAddress([Buffer.from(utils.bytes.utf8.encode('exchange'))], exchange.programId);\n\n      const tx = await exchange.rpc.bond(\n        new BN(maxAmountA.toFixed(0)),\n        new BN(amountB.toFixed(0)),\n        new BN(minLiquidityC.toFixed(0)),\n        new BN(Date.now() + 5000 / 1000), {\n          accounts: {\n            authority: provider.wallet.publicKey,\n            clock: SYSVAR_CLOCK_PUBKEY,\n            exchange: currentExchange.account,\n            exchangeA: currentExchange.accountA,\n            exchangeB: currentExchange.accountB,\n            exchangeV: currentExchange.accountV,\n            mint: new PublicKey(accounts.factory.tokenC),\n            tokenProgram: TOKEN_PROGRAM_ID,\n            userA: walletTokenAccountA,\n            userB: walletTokenAccountB,\n            userC: walletTokenAccountC,\n            userV: walletTokenAccountV\n          },\n          signers: [provider.wallet.owner]\n        });\n      const link = 'https://explorer.solana.com/tx/' + tx;\n\n      description = (<div>Your transaction signature is <a href={link} rel='noreferrer' target='_blank'><code>{tx}</code></a></div>);\n      message = 'Order Successfully Place';\n\n      getInverseDataCallback(currentExchange.symbol);\n    } catch (err) {\n      description = 'There was an error with your order';\n      message = 'Order Error';\n      console.log('Error: ', err);\n    }\n\n    notification.open({description: description, duration: 0, message: message, placement: 'bottomLeft'});\n\n    setBondDeposit();\n  }\n\n  async function approveStake() {\n    let description;\n    let message;\n\n    try {\n      const provider = await getProviderCallback();\n      const factory = new Program(factoryIdl, new PublicKey(factoryIdl.metadata.address), provider);\n\n      const tokenC = new Token(provider.connection, new PublicKey(accounts.factory.tokenC), TOKEN_PROGRAM_ID);\n      const tokenS = new Token(provider.connection, new PublicKey(accounts.factory.tokenS), TOKEN_PROGRAM_ID);\n      const mintInfoC = await tokenC.getMintInfo();\n\n      const walletTokenAccountC = await Token.getAssociatedTokenAddress(\n        ASSOCIATED_TOKEN_PROGRAM_ID,\n        TOKEN_PROGRAM_ID,\n        tokenC.publicKey,\n        provider.wallet.publicKey\n      );\n      const walletTokenAccountS = await Token.getAssociatedTokenAddress(\n        ASSOCIATED_TOKEN_PROGRAM_ID,\n        TOKEN_PROGRAM_ID,\n        tokenS.publicKey,\n        provider.wallet.publicKey\n      );\n\n      const amountC = stakeDeposit * (10 ** mintInfoC.decimals);\n\n      const tx = await factory.rpc.stake(\n        new BN(amountC), {\n          accounts: {\n            authority: provider.wallet.publicKey,\n            factory: new PublicKey(accounts.factory.account),\n            factoryC: new PublicKey(accounts.factory.accountC),\n            mintS: tokenS.publicKey,\n            tokenProgram: TOKEN_PROGRAM_ID,\n            userC: walletTokenAccountC,\n            userS: walletTokenAccountS,\n          }\n        }\n      );\n      const link = 'https://explorer.solana.com/tx/' + tx;\n\n      description = (<div>Your transaction signature is <a href={link} rel='noreferrer' target='_blank'><code>{tx}</code></a></div>);\n      message = 'Stake Successfully Placed';\n    } catch (err) {\n      description = 'Transaction error';\n      message = 'Stake Error';\n      console.log('Error: ', err);\n    }\n\n    setStakeStep(0);\n    setStakeDeposit();\n\n    notification.open({description: description, duration: 0, message: message, placement: 'bottomLeft'});\n  }\n\n  function calculateCountdown() {\n    const today = new Date();\n    const deadline = new Date();\n    deadline.setHours(24, 0, 0, 0);\n    const delta = deadline.getTime() - today.getTime();\n    const hours = Math.floor((delta % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    const mins = Math.floor((delta % (1000 * 60 * 60)) / (1000 * 60));\n    const secs = Math.floor((delta % (1000 * 60)) / 1000);\n    setCountdown(('0' + hours).slice(-2) + ':' + ('0' + mins).slice(-2) + ':' + ('0' + secs).slice(-2));\n  }\n\n  const settingsMenu = (\n    <Menu>\n      <Menu.Item key='github' onClick={() => window.open(githubUrl, '_blank')}>GitHub</Menu.Item>\n      <Menu.Item key='discord'>Discord</Menu.Item>\n    </Menu>\n  );\n\n  const assetTitleModal = (\n    <Button className='AssetTitleModal' type='link' onClick={() => setIsInverseAssetModalVisible(true)}>{inverseAsset} <DownOutlined/></Button>\n  );\n\n  const inverseStatsBar = (\n    <Row className='InverseStatsBar'>\n      <Col span={3}></Col>\n      <Col span={3}>\n        <p><small>Market / Index</small></p>\n        <Title level={5} className='Title Dark Green'>{currentMarketPrice}<span className='White'> / {indexPrice}</span></Title>\n      </Col>\n      <Col span={3}>\n        <p><small>24H Change (%)</small></p>\n        <Title level={5} className='Title Dark Green'>{change24H}</Title>\n      </Col>\n      <Col span={3}>\n        <p><small>24H High</small></p>\n        <Title level={5} className='Title Dark'>{high24H}</Title>\n      </Col>\n      <Col span={3}>\n        <p><small>24H Low</small></p>\n        <Title level={5} className='Title Dark'>{low24H}</Title>\n      </Col>\n      <Col span={3}>\n        <p><small>24H Turnaround ({inverseAsset})</small></p>\n        <Title level={5} className='Title Dark'>{turnaround24H}</Title>\n      </Col>\n      <Col span={3}>\n        <p><small>Funding (%) / Countdown</small></p>\n        <Title level={5} className='Title Dark'><span className='Yellow'>{fundingRate}</span> / {countdown}</Title>\n      </Col>\n      <Col span={3}></Col>\n    </Row>\n  );\n\n  const inverseQuantityDescription = (\n    <small>Your order amount of <span className='White'>{inverseQuantity > 0 ? (inverseQuantity / 1).toFixed(2) : 0} USD</span> equals <span\n        className='White'>{inverseQuantity > 0 ? (inverseQuantity / currentMarketPrice).toFixed(2) : 0} {inverseAsset}</span></small>\n  );\n\n  const approveDescription = (<small>This transaction requires <span className='White'>{gasFee > 0 ? (gasFee / 1).toFixed(2) : 0} SOL</span></small>);\n\n  const leverageDescription = (\n    <small>At <span className='White'>{leverage}x</span> leverage your position is worth <span className='White'>\n        {inverseQuantity > 0 ? (inverseQuantity / currentMarketPrice * leverage).toFixed(2) : 0} {inverseAsset}</span></small>\n  );\n\n  const inverseView = (\n    <>\n      {inverseStatsBar}\n      <br/>\n      <Row>\n        <Col span={6}></Col>\n        { inverseCard === 'inverse' ?\n        <>\n          <Col span={8} className='Cards'>\n            <div className='site-card-border-less-wrapper'>\n              <Card title={assetTitleModal} className='Card Dark' bordered={false}\n                extra={<a href='/#/inverse' className='CardLink' onClick={() => setInverseCard('positions')}>Positions</a>}>\n                <p><strong>Quantity</strong></p>\n                <Input className='InverseInput Input Dark' value={inverseQuantity} placeholder='0'\n                  addonAfter={<Select defaultValue='USD' className='select-after'><Option value='USD'>USD</Option></Select>}\n                  onChange={(e) => {setInverseQuantity(e.target.value); setInverseStep(1)}}/>\n                <br/>\n                <p>Your current exchange rate is 1 USD = {exchangeRate} {inverseAsset}</p>\n                <Radio.Group onChange={(e) => setInverseDirection(e.target.value)} className='RadioGroup Dark' optionType='button' buttonStyle='solid'\n                  value={inverseDirection}>\n                  <Radio.Button className='BuyButton' value='long'>Buy / Long</Radio.Button>\n                  <Radio.Button className='SellButton' value='short'>Sell / Short</Radio.Button>\n                </Radio.Group>\n                <br/>\n                <br/>\n                <p><strong>{leverage}x Leverage</strong></p>\n                <Slider defaultValue={1} min={1} onAfterChange={(e) => {setLeverage(e); setInverseStep(2)}}/>\n                <br/>\n                <Button size='large' disabled={!wallet.connected} onClick={approveInverse} className='InverseButton Button Dark' type='ghost'>\n                  Approve\n                </Button>\n              </Card>\n            </div>\n          </Col>\n          <Col span={1}></Col>\n          <Col span={3}>\n            <Steps direction='vertical' current={inverseStep}>\n              <Step key='set' title='Quantity' description={inverseQuantityDescription}/>\n              <Step key='collateral' title='Leverage' description={leverageDescription}/>\n              <Step key='order' title='Approve' description={approveDescription}/>\n            </Steps>\n          </Col>\n        </> :\n        <Col span={12} className='Cards'>\n          <div className='site-card-border-less-wrapper'>\n            <Card title={assetTitleModal} className='Card Dark' bordered={false}\n              extra={<a href='/#/inverse' className='CardLink' onClick={() => setInverseCard('inverse')}>Inverse</a>}>\n            </Card>\n          </div>\n        </Col>\n        }\n        <Col span={6}></Col>\n      </Row>\n    </>\n  );\n\n  const bondView = (\n    <Row>\n      <Col span={8}></Col>\n      <Col span={8} className='Cards'>\n        <div className='site-card-border-less-wrapper'>\n          <Card className='Card Dark' title={assetTitleModal} bordered={false}\n            extra={<a href='/#/bond' className='CardLink' onClick={(e) => {}}>Positions</a>}>\n            <Input className='StakeInput Input Dark' value={bondDeposit} placeholder='0' onChange={(e) => setBondDeposit(e.target.value)}/>\n            <br/>\n            <p>Your current balance is <strong>{balance > 0 ? (balance / 1).toFixed(2) : 0}</strong></p>\n            <Button size='large' disabled={!wallet.connected} className='ApproveButton Button Dark' type='ghost' onClick={approveBond}>Approve</Button>\n          </Card>\n        </div>\n      </Col>\n      <Col span={8}></Col>\n    </Row>\n  );\n\n  const stakeDescription = (\n    <small>Your deposit of <span className='White'>{stakeDeposit > 0 ? (stakeDeposit / 1).toFixed(2) : 0} {CHERUB.symbol.toUpperCase()}</span>&nbsp;\n      is set to earn <span className='White'>12% APY</span>\n    </small>\n  );\n\n  const stakeView = (\n    <Row>\n      <Col span={6}></Col>\n      { stakeCard === 'stake' ?\n      <>\n        <Col span={4}>\n          <Steps direction='vertical' current={stakeStep}>\n            <Step key='set' title='Quantity' description={stakeDescription}/>\n            <Step key='deposit' title='Approve' description={approveDescription}/>\n          </Steps>\n        </Col>\n        <Col span={1}></Col>\n        <Col span={7} className='Cards'>\n          <div className='site-card-border-less-wrapper'>\n            <Card className='Card Dark' title={CHERUB.symbol} bordered={false}\n              extra={<a href='/#/stake' className='CardLink' onClick={() => setStakeCard('positions')}>Positions</a>}>\n              <Input className='StakeInput Input Dark' value={stakeDeposit} placeholder='0'\n                onChange={(e) => {setStakeStep(1); setStakeDeposit(e.target.value)}}/>\n              <br/>\n              <p>Your current balance is <strong>{balance > 0 ? (balance / 1).toFixed(2) : 0}</strong></p>\n              <Button size='large' disabled={!wallet.connected} className='ApproveButton Button Dark' type='ghost' onClick={approveStake}>Approve</Button>\n            </Card>\n          </div>\n        </Col>\n      </> :\n      <Col span={12} className='Cards'>\n        <Card className='Card Dark' title={CHERUB.symbol} bordered={false}\n          extra={<a href='/#/stake' className='CardLink' onClick={() => setStakeCard('stake')}>Stake</a>}>\n        </Card>\n      </Col>\n      }\n      <Col span={6}></Col>\n    </Row>\n  );\n\n  const daoView = (\n    <>\n      { daoCard === 'statistics' ?\n      <Row>\n        <Col span={2}></Col>\n        <Col span={20} className='Cards'>\n          <div className='site-card-border-less-wrapper'>\n            <Card className='Card Dark' title='DAO' bordered={false} extra={<a href='/#/dao' className='CardLink' onClick={() => setDAOCard('vote')}>\n                Vote</a>}>\n              <Row>\n                <Col span={6}>\n                  <p>Market Cap</p>\n                  <Title level={3} className='Title Dark'>{cMarketCap}</Title>\n                </Col>\n                <Col span={6}>\n                  <p>{CHERUB.symbol} Price</p>\n                  <Title level={3} className='Title Dark'>{cCurrentPrice}</Title>\n                </Col>\n                <Col span={6}>\n                  <p>Circulating Supply (Total)</p>\n                  <Title level={3} className='Title Dark'>{cCirculatingSupplyTotal}</Title>\n                </Col>\n                <Col span={6}>\n                  <p>Markets</p>\n                  <Title level={3} className='Title Dark'>{tokenCount}</Title>\n                </Col>\n              </Row>\n              <br/>\n              <Row>\n                <Col span={12}>\n                  <p>Total Value Deposited</p>\n                  <Line height={100} data={tvdData} options={chartOptions}/>\n                </Col>\n                <Col span={12}>\n                  <p>Market Value of Treasury Assets</p>\n                  <Line height={100} data={treasuryData} options={chartOptions}/>\n                </Col>\n              </Row>\n            </Card>\n          </div>\n        </Col>\n        <Col span={2}></Col>\n      </Row> :\n      <Row>\n        <Col span={2}></Col>\n        <Col span={20} className='Cards'>\n          <div className='site-card-border-less-wrapper'>\n            <Card className='Card Dark' title='DAO' bordered={false}\n              extra={<a href='/#/dao' className='CardLink' onClick={(e) => setDAOCard('statistics')}>Statistics</a>}>\n              <List itemLayout='horizontal' dataSource={daoProposals} renderItem={item => (<List.Item><List.Item.Meta title={item.title}\n                description={item.description}/>{item.icon}</List.Item>)}\n              />\n            </Card>\n          </div>\n        </Col>\n        <Col span={2}></Col>\n      </Row>\n      }\n    </>\n  );\n\n  useEffect(() => {\n    if (!isBlockHeightIntervalSet) {\n      setIsBlockHeightIntervalSet(true);\n      setInterval(getBlockHeightCallback, 10000);\n    }\n  }, [isBlockHeightIntervalSet, getBlockHeightCallback]);\n\n  useEffect(() => {\n    if (!isCountdownIntervalSet) {\n      setIsCountdownIntervalSet(true);\n      setInterval(calculateCountdown, 1000);\n    }\n  }, [isCountdownIntervalSet, setIsCountdownIntervalSet]);\n\n  useEffect(() => {\n    setMenu(getWindowRoute());\n  }, [setMenu]);\n\n  useEffect(() => {\n    if (!isInverseDataSet) {\n      setIsInverseSet(true);\n      setCurrentExchange(accounts.exchanges.find((x) => x.symbol === DEFAULT_SYMBOL));\n      getInverseDataCallback(DEFAULT_SYMBOL);\n    }\n  }, [currentExchange.token, currentExchange.accountV, getInverseDataCallback, isInverseDataSet]);\n\n  useEffect(() => {\n    // TODO: This fires every second which is too often\n    getDashboardDataCallback();\n    getFactoryDataCallback();\n  }, [getDashboardDataCallback, getFactoryDataCallback]);\n\n  useEffect(() => {\n    // TODO: This fires every second which is too often\n    if (wallet.connected) {\n      getBalanceCallback();\n    }\n  }, [getBalanceCallback, wallet.connected]);\n\n  return (\n    <Layout className='App Dark'>\n      { !IS_LOCALHOST ?\n      <Alert type='info' className='Banner' message=<small>You are currently using an unaudited piece of software via {network}. Use at your own risk.\n      </small>/> : null\n      }\n      <Header className='Header Dark'>\n        <Row>\n          <Col span={6}>\n            <div className='Logo Dark'>\n              <img src='/logo.svg' alt='Logo' className='LogoImage'/>\n              <strong className='LogoText' onClick={() => window.open(githubUrl, '_blank')}>{logoText}</strong>\n            </div>\n          </Col>\n          <Col span={12} className='ColCentered'>\n            <Menu className='Menu Dark' onClick={(e) => {setMenu(e.key); window.location.href = '/#/' + e.key}} selectedKeys={[menu]}\n              mode='horizontal'>\n              <Menu.Item key='dao'>DAO</Menu.Item>\n              <Menu.Item key='inverse'>Inverse Perpetuals</Menu.Item>\n              <Menu.Item key='bond'>Bond</Menu.Item>\n              <Menu.Item key='stake'\n                onClick={() => {setInverseAsset(CHERUB.symbol); setCurrentExchange(accounts.exchanges.find((x) => x.symbol === CHERUB.symbol))}}>\n                Stake\n              </Menu.Item>\n            </Menu>\n          </Col>\n          <Col span={6} className='ConnectWalletHeader'>\n            { !wallet.connected ?\n            <>\n              <WalletMultiButton className='WalletMultiButton'/>\n              <Button className='ConnectWalletButton' onClick={(e) => document.getElementsByClassName('WalletMultiButton')[0].click()} type='link'>\n                Connect Wallet\n              </Button>\n            </> :\n            <Button className='ConnectWalletButton' type='link'>\n              <code className='SolCount'>{balance > 0 ? (balance / 1).toFixed(2) : 0 } {inverseAsset}</code>\n              <code>{wallet.publicKey.toString().substr(0, 4)}...{wallet.publicKey.toString().substr(-4)}</code>\n            </Button>\n            }\n            <Dropdown className='Dropdown SettingsDropdown' overlay={settingsMenu}><SettingOutlined/></Dropdown>\n          </Col>\n        </Row>\n      </Header>\n      <Layout className='Layout Dark'>\n        <Content>\n          <div>\n            <br/>\n            <br/>\n            { menu === 'inverse' ? inverseView : null }\n            { menu === 'stake' ? stakeView : null }\n            { menu === 'bond' ? bondView : null }\n            { menu === 'dao' ? daoView : null }\n          </div>\n        </Content>\n      </Layout>\n      <Footer className='Footer'><code className='BlockHeight'><small>• {blockHeight}</small></code>\n      </Footer>\n      <Modal title='Assets' footer={null} visible={isInverseAssetModalVisible} onCancel={() => {setIsInverseAssetModalVisible(false)}}>\n        <List itemLayout='horizontal' dataSource={accounts.exchanges} forcerender='true'\n          renderItem={exchange => (\n            <List.Item className='Asset ListItem'>\n              <List.Item.Meta title={exchange.symbol}\n                onClick={() => {setInverseAsset(exchange.symbol); getInverseData(exchange.symbol); setIsInverseAssetModalVisible(false);\n                  setCurrentExchange(accounts.exchanges.find((x) => x.symbol === exchange.symbol)); }}/>\n            </List.Item>)}/>\n          </Modal>\n        </Layout>\n  );\n}\n\nconst AppWithProvider = () => (\n  <ConnectionProvider endpoint={network}>\n    <WalletProvider wallets={wallets} autoConnect>\n      <WalletModalProvider>\n        <App/>\n      </WalletModalProvider>\n    </WalletProvider>\n  </ConnectionProvider>\n);\n\nexport default AppWithProvider;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}