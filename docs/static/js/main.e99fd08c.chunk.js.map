{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["accounts","window","location","origin","require","Content","Layout","Footer","Header","Option","Select","Step","Steps","Title","Typography","Direction","Long","long","Short","short","CHERUB","exchanges","find","x","name","CHERUB_EXCHANGE","exchange","CHERUB_NAME","DEFAULT","DEFAULT_NAME","SOL_TOKEN","token","githubUrl","network","clusterApiUrl","opts","showBanner","wallets","getPhantomWallet","getSolletWallet","getSlopeWallet","chartOptions","scales","display","grid","y","plugins","legend","daoProposals","title","description","icon","className","treasuryData","labels","datasets","data","fill","borderColor","backgroundColor","tvdData","App","useState","balance","setBalance","blockHeight","setBlockHeight","blockHeightInterval","setBlockHeightInterval","bondDeposit","setBondDeposit","cCirculatingSupplyTotal","setCCirculatingSupplyTotal","cCurrentPrice","setCCurrentPrice","cMarketCap","setCMarketCap","change24H","setChange24H","countdownInterval","setCountdownInterval","currentMarket","setCurrentMarket","exchangeRate","setExchangeRate","fundingRate","setFundingRate","gasFee","high24H","setHigh24H","isInverseAssetModalVisible","setIsInverseAssetModalVisible","isInverseDataSet","setIsInverseSet","indexPrice","setIndexPrice","leverage","setLeverage","low24H","setLow24H","menu","setMenu","daoCard","setDAOCard","stakeCard","setStakeCard","stakeDeposit","setStakeDeposit","stakeStep","setStakeStep","tokenCount","setTokenCount","inverseAsset","setInverseAsset","inverseCard","setInverseCard","inverseDirection","setInverseDirection","inverseQuantity","setInverseQuantity","inverseStep","setInverseStep","turnaround24H","setTurnaround24H","wallet","useWallet","getProviderCallback","useCallback","getProvider","getBalanceCallback","connected","publicKey","getDashboardDataCallback","getFactoryDataCallback","getInverseDataCallback","getInverseData","a","connection","Connection","Provider","provider","inverseExchange","getBalance","LAMPORTS_PER_SOL","tokenA","Token","PublicKey","TOKEN_PROGRAM_ID","getMintInfo","mintAInfo","decimals","toFixed","factory","Program","factoryIdl","metadata","address","account","factoryData","fetch","toNumber","console","log","exchangeIdl","tokenC","mintC","mintCInfo","supply","total","exchangeData","exchangeDataAccount","lastPrice","networkErrorMessage","message","info","setDummyInverseData","marketIndex","Math","random","asset","exchangePublicKey","exchangeAccount","mintAPublicKey","mintA","exchangeTokenAccountA","exchangeTokenAccountB","tokenB","getAssociatedTokenAddress","ASSOCIATED_TOKEN_PROGRAM_ID","walletTokenAccountA","walletA","walletTokenAccountB","walletB","findProgramAddress","Buffer","from","utils","bytes","utf8","encode","programId","pda","aToBAmountA","BN","equityA","exchangePositionAccount","Keypair","generate","rpc","aToBInput","Date","now","authority","clock","SYSVAR_CLOCK_PUBKEY","exchangeA","exchangeB","position","recipient","systemProgram","SystemProgram","tokenProgram","userA","userB","signers","tx","link","notification","open","href","rel","target","duration","placement","walletTokenAccountC","walletC","walletTokenAccountV","walletV","aAmount","additionalAmountB","additionalMinBondC","bond","exchangeV","mint","userC","userV","owner","settingsMenu","Item","onClick","assetTitleModal","type","inverseStatsBar","span","level","inverseQuantityDescription","approveDescription","leverageDescription","inverseView","bordered","extra","value","placeholder","addonAfter","defaultValue","onChange","e","Group","optionType","buttonStyle","Button","min","onAfterChange","size","disabled","direction","current","bondView","stakeDescription","toUpperCase","stakeView","daoView","height","options","itemLayout","dataSource","renderItem","item","Meta","useEffect","routes","split","length","indexOf","then","setInterval","getEpochInfo","epochInfo","today","deadline","setHours","delta","getTime","floor","calculateCountdown","closable","src","alt","key","selectedKeys","mode","toString","substr","document","getElementsByClassName","click","overlay","footer","visible","onCancel","forcerender","AppWithProvider","endpoint","autoConnect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e99fd08c.chunk.js","sourcesContent":["import {\n  Alert, Button, Card, Col, Dropdown, Input, Layout, List, Modal, Menu, Radio, Row, Select, Slider, Steps, Typography, message,\n  notification\n} from 'antd';\nimport { CheckCircleOutlined, ClockCircleOutlined, CloseCircleOutlined, DownOutlined, SettingOutlined } from '@ant-design/icons';\nimport { BN, Program, Provider, utils } from '@project-serum/anchor';\nimport { useEffect, useCallback, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { ConnectionProvider, WalletProvider, useWallet  } from '@solana/wallet-adapter-react';\nimport { WalletModalProvider, WalletMultiButton } from '@solana/wallet-adapter-react-ui';\nimport { getPhantomWallet, getSlopeWallet, getSolletWallet } from '@solana/wallet-adapter-wallets';\nimport { Connection, Keypair, PublicKey, SystemProgram, SYSVAR_CLOCK_PUBKEY, LAMPORTS_PER_SOL, clusterApiUrl } from '@solana/web3.js';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\n\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nimport exchangeIdl from './exchange.json';\nimport factoryIdl from './factory.json';\n\nlet accounts = {};\n\nif (window.location.origin === 'http://127.0.0.1:3000') {\n  accounts = require('./accounts-localnet.json');\n} else {\n  accounts = require('./accounts.json');\n}\n\nconst { Content, Footer, Header } = Layout;\nconst { Option } = Select;\nconst { Step } = Steps;\nconst { Title } = Typography;\n\nconst Direction = {\n  Long: { long: {} },\n  Short: { short: {} },\n};\n\nconst CHERUB = accounts.exchanges.find((x) => x.name === 'CHRB');\nconst CHERUB_EXCHANGE = CHERUB.exchange;\nconst CHERUB_NAME = CHERUB.name;\nconst DEFAULT = accounts.exchanges.find((x) => x.name === 'SOL');\nconst DEFAULT_NAME = DEFAULT.name;\nconst SOL_TOKEN = DEFAULT.token\nconst githubUrl = 'https://www.github.com/cherub-so/cherub-protocol';\nconst name = 'cheruβ';\nconst network = window.location.origin === 'http://127.0.0.1:3000' ? 'http://127.0.0.1:8899' : clusterApiUrl('devnet');\nconst opts = { preflightCommitment: 'processed' };\nconst showBanner = network !== 'http://127.0.0.1:8899';\nconst wallets = [getPhantomWallet(), getSolletWallet(), getSlopeWallet()];\n\nconst chartOptions = {\n  scales: {\n    x: {\n      display: true,\n      grid: {\n        display: false\n      },\n    },\n    y: {\n      display: true,\n      grid: {\n        display: false\n      },\n    }\n  },\n  plugins: {\n    legend: { display: false }\n  }\n}\n\nconst daoProposals = [{\n  title: 'Move SOL/COPE stake to SOL/MANGO',\n  description: '4 • September 25th, 2021',\n  icon: <ClockCircleOutlined className='ClockCircleOutlined'/>\n}, {\n  title: 'Contributor Grant: Tim Su',\n  description: '3 • Executed September 12th, 2021',\n  icon: <CheckCircleOutlined className='CheckCircleOutlined'/>\n}, {\n  title: 'Add AAVE, SUSHI, YFI',\n  description: '2 • Executed September 2nd, 2021',\n  icon: <CloseCircleOutlined className='CloseCircleOutlined'/>\n}, {\n  title: 'Set Pause Guardian to Community Multi-Sig',\n  description: '1 • Executed September 1st, 2021',\n  icon: <CheckCircleOutlined className='CheckCircleOutlined'/>\n}];\n\n// TODO: Remove grid line color https://stackoverflow.com/questions/41094658/chartjs-change-grid-line-color\nconst treasuryData = {\n  labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n  datasets: [{\n    data: [0, 7, 6, 10, 24, 51, 54, 176],\n    fill: true,\n    borderColor: '#40a9ff',\n    backgroundColor: '#69c0ff',\n  }]\n};\n\nconst tvdData = {\n  labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n  datasets: [{\n    data: [0, 5, 10, 33, 35, 51, 54, 76],\n    fill: true,\n    borderColor: '#40a9ff',\n    backgroundColor: '#69c0ff'\n  }]\n};\n\nfunction App() {\n  const [balance, setBalance] = useState(0);\n  const [blockHeight, setBlockHeight] = useState(0);\n  const [blockHeightInterval, setBlockHeightInterval] = useState(false);\n  const [bondDeposit, setBondDeposit] = useState();\n  const [cCirculatingSupplyTotal, setCCirculatingSupplyTotal] = useState('0 / 0');\n  const [cCurrentPrice, setCCurrentPrice] = useState(0);\n  const [cMarketCap, setCMarketCap] = useState(0);\n  const [change24H, setChange24H] = useState();\n  const [countdown, setCountdown] = useState('');\n  const [countdownInterval, setCountdownInterval] = useState(false);\n  const [currentMarket, setCurrentMarket] = useState();\n  const [exchangeRate, setExchangeRate] = useState(0);\n  const [fundingRate, setFundingRate] = useState();\n  // eslint-disable-next-line\n  const [gasFee, setGasFee] = useState();\n  const [high24H, setHigh24H] = useState();\n  const [isInverseAssetModalVisible, setIsInverseAssetModalVisible] = useState(false);\n  const [isInverseDataSet, setIsInverseSet] = useState(false);\n  const [indexPrice, setIndexPrice] = useState();\n  const [leverage, setLeverage] = useState(1);\n  const [low24H, setLow24H] = useState();\n  const [menu, setMenu] = useState('');\n  const [daoCard, setDAOCard] = useState('statistics');\n  const [stakeCard, setStakeCard] = useState('stake');\n  const [stakeDeposit, setStakeDeposit] = useState();\n  const [stakeStep, setStakeStep] = useState(0);\n  const [tokenCount, setTokenCount] = useState(0);\n  const [inverseAsset, setInverseAsset] = useState(DEFAULT_NAME);\n  const [inverseCard, setInverseCard] = useState('inverse');\n  const [inverseDirection, setInverseDirection] = useState('long');\n  const [inverseQuantity, setInverseQuantity] = useState();\n  const [inverseStep, setInverseStep] = useState(0);\n  const [turnaround24H, setTurnaround24H] = useState();\n\n  const wallet = useWallet();\n\n  const getProviderCallback = useCallback(getProvider, [getProvider]);\n\n  const getBalanceCallback = useCallback(getBalance, [getProviderCallback, inverseAsset, wallet.connected, wallet.publicKey]);\n  const getDashboardDataCallback = useCallback(getDashboardData, [getProviderCallback]);\n  const getFactoryDataCallback = useCallback(getFactoryData, [getProviderCallback]);\n  const getInverseDataCallback = useCallback(getInverseData, [getProviderCallback]);\n\n  async function getProvider() {\n    const connection = new Connection(network, opts.preflightCommitment);\n    return new Provider(connection, wallet, opts.preflightCommitment);\n  }\n\n  async function getBalance() {\n    const provider = await getProviderCallback();\n    const inverseExchange = accounts.exchanges.find((x) => x.name === inverseAsset);\n    if (wallet.connected) {\n      if (inverseExchange.token === SOL_TOKEN) {\n        const balance = await provider.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      } else {\n        const tokenA = new Token(provider.connection, new PublicKey(inverseExchange.token), TOKEN_PROGRAM_ID);\n        const mintAInfo = await tokenA.getMintInfo();\n        const balance = await provider.connection.getBalance(new PublicKey(inverseExchange.token));\n        setBalance((balance / (10 ** mintAInfo.decimals)).toFixed(2));\n      }\n    }\n  }\n\n  async function getFactoryData() {\n    const provider = await getProviderCallback();\n    const factory = new Program(factoryIdl, new PublicKey(factoryIdl.metadata.address), provider);\n    try {\n      const account = await factory.account.factoryData.fetch(new PublicKey(accounts.factory));\n      setTokenCount(account.tokenCount.toNumber());\n    } catch (err) {\n      console.log('Transaction error: ', err);\n    }\n  }\n\n  async function getDashboardData() {\n    const provider = await getProviderCallback();\n    const exchange = new Program(exchangeIdl, new PublicKey(exchangeIdl.metadata.address), provider);\n    try {\n      const tokenC = new Token(provider.connection, new PublicKey(accounts.mintC), TOKEN_PROGRAM_ID, null);\n      const mintCInfo = await tokenC.getMintInfo();\n      const supply = mintCInfo.supply.toNumber() / (mintCInfo.decimals ** 10);\n      const total = mintCInfo.supply.toNumber() / (mintCInfo.decimals ** 10);\n      setCCirculatingSupplyTotal(supply.toFixed(0) + ' / ' + total.toFixed(0));\n      const exchangeDataAccount = await exchange.account.exchangeData.fetch(new PublicKey(CHERUB_EXCHANGE));\n      const lastPrice = (exchangeDataAccount.lastPrice.toNumber() / (mintCInfo.decimals * 10)).toFixed(2);\n      setCCurrentPrice((lastPrice / 1).toFixed(0));\n      setCMarketCap((lastPrice / 1).toFixed(0));\n    } catch (err) {\n      console.log('Transaction error: ', err);\n    }\n  }\n\n  function networkErrorMessage() {\n    message.info('Unable to connect to network');\n  }\n\n  function setDummyInverseData(lastPrice) {\n    const marketIndex = lastPrice * (Math.random() / 100 + 0.9);\n    setChange24H('+' + (lastPrice > 0 ? (Math.random() / 100 + 2).toFixed(2) : 0) + '%');\n    setCurrentMarket(lastPrice);\n    setFundingRate(lastPrice > 0 ? ((lastPrice - marketIndex) / 1000).toFixed(4) : 0);\n    setHigh24H((lastPrice * (Math.random() / 100 + 1.1)).toFixed(2));\n    setIndexPrice(marketIndex.toFixed(2));\n    setLow24H((lastPrice * (Math.random() / 100 + 0.9)).toFixed(2));\n    setTurnaround24H((lastPrice * (Math.random() * 10000 + 1.3)).toFixed(0));\n  }\n\n  async function getInverseData(asset) {\n    const provider = await getProviderCallback();\n    const exchangePublicKey = new PublicKey(accounts.exchanges.find((x) => x.name === asset).exchange);\n    const exchange = new Program(exchangeIdl, new PublicKey(exchangeIdl.metadata.address), provider);\n\n    try {\n      const exchangeAccount = await exchange.account.exchangeData.fetch(exchangePublicKey);\n      const mintAPublicKey = accounts.exchanges.find((x) => x.name === asset).mintA;\n      const tokenA = new Token(provider.connection, new PublicKey(mintAPublicKey), TOKEN_PROGRAM_ID, null);\n      const mintAInfo = await tokenA.getMintInfo();\n      const lastPrice = (exchangeAccount.lastPrice.toNumber() / (10 ** mintAInfo.decimals)).toFixed(2);\n\n      setDummyInverseData(lastPrice);\n      setExchangeRate(lastPrice);\n    } catch (err) {\n      console.log('Transaction error: ', err);\n    }\n\n    setInverseStep(0);\n    setInverseQuantity();\n  }\n\n  async function approveInverse() {\n    const provider = await getProviderCallback();\n\n    const inverseExchange = accounts.exchanges.find((x) => x.name === inverseAsset);\n\n    const exchange = new Program(exchangeIdl, new PublicKey(exchangeIdl.metadata.address), provider);\n    const exchangePublicKey = new PublicKey(inverseExchange.exchange);\n\n    const tokenA = new Token(provider.connection, new PublicKey(inverseExchange.mintA), TOKEN_PROGRAM_ID, null);\n    const mintAInfo = await tokenA.getMintInfo();\n    const exchangeTokenAccountA = inverseExchange.tokenA;\n    const exchangeTokenAccountB = inverseExchange.tokenB;\n\n    // eslint-disable-next-line\n    const walletAssociatedAccountX = await Token.getAssociatedTokenAddress(\n      ASSOCIATED_TOKEN_PROGRAM_ID,\n      TOKEN_PROGRAM_ID,\n      wallet.publicKey,\n      wallet.publicKey\n    );\n\n    // eslint-disable-next-line\n    const associatedTokenAccountA = await Token.getAssociatedTokenAddress(\n      ASSOCIATED_TOKEN_PROGRAM_ID,\n      TOKEN_PROGRAM_ID,\n      wallet.publicKey,\n      wallet.publicKey\n    );\n    // TODO: Make PDA\n    const walletTokenAccountA = inverseExchange.walletA;\n    const walletTokenAccountB = inverseExchange.walletB;\n\n    // eslint-disable-next-line\n    const [pda, nonce] = await PublicKey.findProgramAddress([Buffer.from(utils.bytes.utf8.encode('exchange'))], exchange.programId);\n    const aToBAmountA = new BN(inverseQuantity * leverage * (10 ** mintAInfo.decimals));\n    const equityA = new BN(inverseQuantity * (10 ** mintAInfo.decimals));\n\n    // TODO: Make PDA\n    const exchangePositionAccount = Keypair.generate();\n\n    try {\n      const tx = await exchange.rpc.aToBInput(\n        aToBAmountA,\n        new BN(Date.now() + 5000 / 1000),\n        inverseDirection === 'long' ? Direction.Long : Direction.Short,\n        equityA,\n        {\n          accounts: {\n            authority: provider.wallet.publicKey,\n            clock: SYSVAR_CLOCK_PUBKEY,\n            exchange: exchangePublicKey,\n            exchangeA: exchangeTokenAccountA,\n            exchangeB: exchangeTokenAccountB,\n            pda,\n            position: exchangePositionAccount.publicKey,\n            recipient: walletTokenAccountA,\n            systemProgram: SystemProgram.programId,\n            tokenProgram: TOKEN_PROGRAM_ID,\n            userA: walletTokenAccountA,\n            userB: walletTokenAccountB\n          },\n          signers: [exchangePositionAccount]\n        });\n\n      const link = 'https://explorer.solana.com/tx/' + tx;\n\n      notification.open({\n        message: 'Order Successfully Placed',\n        description: <div>Your transaction signature is <a href={link} rel='noreferrer' target='_blank'><code>{tx}</code></a></div>,\n        duration: 0,\n        placement: 'bottomLeft'\n      });\n\n      setInverseStep(0);\n      setLeverage(1);\n      setInverseQuantity();\n\n      getInverseDataCallback(inverseExchange.name);\n    } catch (err) {\n      console.log('Transaction error: ', err);\n    }\n  }\n\n  async function approveBond() {\n    const provider = await getProviderCallback();\n\n    const inverseExchange = accounts.exchanges.find((x) => x.name === inverseAsset);\n\n    const exchange = new Program(exchangeIdl, new PublicKey(exchangeIdl.metadata.address), provider);\n\n    const tokenA = new Token(provider.connection, new PublicKey(inverseExchange.mintA), TOKEN_PROGRAM_ID);\n    const mintAInfo = await tokenA.getMintInfo();\n\n    // TODO: Do not pull from accounts file but get from browser via PDA\n    // eslint-disable-next-line\n    const walletAssociatedAccountX = await Token.getAssociatedTokenAddress(\n      ASSOCIATED_TOKEN_PROGRAM_ID,\n      TOKEN_PROGRAM_ID,\n      wallet.publicKey,\n      wallet.publicKey\n    );\n    const walletTokenAccountA = inverseExchange.walletA;\n    const walletTokenAccountB = inverseExchange.walletB;\n    const walletTokenAccountC = inverseExchange.walletC;\n    const walletTokenAccountV = inverseExchange.walletV;\n\n    // eslint-disable-next-line\n    const [pda, nonce] = await PublicKey.findProgramAddress([Buffer.from(utils.bytes.utf8.encode('exchange'))], exchange.programId);\n    const aAmount = new BN(bondDeposit * (10 ** mintAInfo.decimals));\n\n    const additionalAmountB = aAmount / 2;\n    // TODO: Not right\n    const additionalMinBondC = 0.00001 * (10 ** 9);\n\n    try {\n      const tx = await exchange.rpc.bond(\n        new BN(aAmount),\n        new BN(additionalAmountB),\n        new BN(additionalMinBondC),\n        new BN(Date.now() + 5000 / 1000), {\n          accounts: {\n            authority: provider.wallet.publicKey,\n            clock: SYSVAR_CLOCK_PUBKEY,\n            exchange: inverseExchange.exchange,\n            exchangeA: inverseExchange.walletA,\n            exchangeB: inverseExchange.walletB,\n            exchangeV: inverseExchange.walletV,\n            mint: new PublicKey(accounts.mintC),\n            tokenProgram: TOKEN_PROGRAM_ID,\n            userA: walletTokenAccountA,\n            userB: walletTokenAccountB,\n            userC: walletTokenAccountC,\n            userV: walletTokenAccountV\n          },\n          signers: [provider.wallet.owner]\n        });\n\n      const link = 'https://explorer.solana.com/tx/' + tx;\n\n      notification.open({\n        message: 'Order Successfully Placed',\n        description: <div>Your transaction signature is <a href={link} rel='noreferrer' target='_blank'><code>{tx}</code></a></div>,\n        duration: 0,\n        placement: 'bottomLeft'\n      });\n\n      setInverseStep(0);\n      setLeverage(1);\n      setInverseQuantity();\n\n      getInverseDataCallback(inverseExchange.name);\n    } catch (err) {\n      console.log('Transaction error: ', err);\n    }\n  }\n\n  function calculateCountdown() {\n    // TODO: No longer needed?\n    const today = new Date();\n    const deadline = new Date();\n    deadline.setHours(24, 0, 0, 0);\n    const delta = deadline.getTime() - today.getTime();\n    const hours = Math.floor((delta % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    const mins = Math.floor((delta % (1000 * 60 * 60)) / (1000 * 60));\n    const secs = Math.floor((delta % (1000 * 60)) / 1000);\n    //setCountdown(('0' + hours).slice(-2) + ':' + ('0' + mins).slice(-2) + ':' + ('0' + secs).slice(-2));\n  }\n\n  const settingsMenu = (\n    <Menu>\n      <Menu.Item key='github' onClick={() => window.open(githubUrl, '_blank')}>GitHub</Menu.Item>\n      <Menu.Item key='discord'>Discord</Menu.Item>\n    </Menu>\n  );\n\n  const assetTitleModal = (\n    <Button className='AssetTitleModal' type='link'\n      onClick={() => setIsInverseAssetModalVisible(true)}>{inverseAsset} <DownOutlined/></Button>\n  );\n\n  const inverseStatsBar = (\n    <Row className='InverseStatsBar'>\n      <Col span={3}></Col>\n      <Col span={3}>\n        <p><small>Market / Index</small></p>\n        <Title level={5} className='Title Dark Green'>{currentMarket}<span className='White'> / {indexPrice}</span></Title>\n      </Col>\n      <Col span={3}>\n        <p><small>24H Change</small></p>\n        <Title level={5} className='Title Dark Green'>{change24H}</Title>\n      </Col>\n      <Col span={3}>\n        <p><small>24H High</small></p>\n        <Title level={5} className='Title Dark'>{high24H}</Title>\n      </Col>\n      <Col span={3}>\n        <p><small>24H Low</small></p>\n        <Title level={5} className='Title Dark'>{low24H}</Title>\n      </Col>\n      <Col span={3}>\n        <p><small>24H Turnaround ({inverseAsset})</small></p>\n        <Title level={5} className='Title Dark'>{turnaround24H}</Title>\n      </Col>\n      <Col span={3}>\n        <p><small>Funding Rate</small></p>\n        <Title level={5} className='Title Dark'><span className='Yellow'>{fundingRate}</span></Title>\n      </Col>\n      <Col span={3}></Col>\n    </Row>\n  );\n\n  const inverseQuantityDescription = (\n    <small>\n      Your order amount of <span className='White'>{inverseQuantity > 0 ? (inverseQuantity / 1).toFixed(2) : 0} USD</span> equals <span\n        className='White'>{inverseQuantity > 0 ? (inverseQuantity / currentMarket).toFixed(2) : 0} {inverseAsset}</span>\n    </small>\n  );\n\n  const approveDescription = (\n    <small>This transaction requires <span className='White'>{gasFee > 0 ? (gasFee / 1).toFixed(2) : 0} SOL</span></small>\n  );\n\n  const leverageDescription = (\n    <small>\n      At <span className='White'>{leverage}x</span> leverage your position is worth <span className='White'>\n        {inverseQuantity > 0 ? (inverseQuantity / currentMarket * leverage).toFixed(2) : 0} {inverseAsset}</span>\n    </small>\n  );\n\n  const inverseView = (\n    <>\n      {inverseStatsBar}\n      <br/>\n      <Row>\n        <Col span={6}></Col>\n        { inverseCard === 'inverse' ?\n        <>\n          <Col span={8} className='Cards'>\n            <div className='site-card-border-less-wrapper'>\n              <Card title={assetTitleModal} className='Card Dark' bordered={false}\n                extra={<a href='/#/inverse' className='CardLink' onClick={() => setInverseCard('positions')}>Positions</a>}>\n                <p><strong>Quantity</strong></p>\n                <Input className='InverseInput Input Dark' value={inverseQuantity} placeholder='0'\n                  addonAfter={\n                    <Select defaultValue='USD' className='select-after'>\n                      <Option value='USD'>USD</Option>\n                    </Select>\n                  } onChange={(e) => {setInverseQuantity(e.target.value); setInverseStep(1)}} />\n                <br/>\n                <p>Your current exchange rate is 1 USD = {exchangeRate} {inverseAsset}</p>\n                <Radio.Group onChange={(e) => setInverseDirection(e.target.value)} className='RadioGroup Dark'\n                  optionType='button' buttonStyle='solid' value={inverseDirection}>\n                  <Radio.Button className='BuyButton' value='long'>Buy / Long</Radio.Button>\n                  <Radio.Button className='SellButton' value='short'>Sell / Short</Radio.Button>\n                </Radio.Group>\n                <br/>\n                <br/>\n                <p><strong>{leverage}x Leverage</strong></p>\n                <Slider defaultValue={1} min={1} onAfterChange={(e) => {setLeverage(e); setInverseStep(2)}} />\n                <br/>\n                <Button size='large' disabled={!wallet.connected} onClick={approveInverse} className='InverseButton Button Dark'\n                  type='ghost'>Approve</Button>\n              </Card>\n            </div>\n          </Col>\n          <Col span={1}></Col>\n          <Col span={3}>\n            <Steps direction='vertical' current={inverseStep}>\n              <Step key='set' title='Quantity' description={inverseQuantityDescription}/>\n              <Step key='collateral' title='Leverage' description={leverageDescription}/>\n              <Step key='order' title='Approve' description={approveDescription}/>\n            </Steps>\n          </Col>\n        </> :\n        <Col span={12} className='Cards'>\n          <div className='site-card-border-less-wrapper'>\n            <Card title={assetTitleModal} className='Card Dark' bordered={false}\n              extra={<a href='/#/inverse' className='CardLink' onClick={() => setInverseCard('inverse')}>Inverse</a>}>\n            </Card>\n          </div>\n        </Col>\n        }\n        <Col span={6}></Col>\n      </Row>\n    </>\n  );\n\n  const bondView = (\n    <Row>\n      <Col span={8}></Col>\n      <Col span={8} className='Cards'>\n        <div className='site-card-border-less-wrapper'>\n          <Card className='Card Dark' title={assetTitleModal} bordered={false}\n            extra={<a href='/#/bond' className='CardLink' onClick={(e) => {}}>Positions</a>}>\n            <Input className='StakeInput Input Dark' value={bondDeposit} placeholder='0'\n              onChange={(e) => setBondDeposit(e.target.value)} />\n            <br/>\n            <p>Your current balance is <strong>{balance > 0 ? (balance / 1).toFixed(2) : 0}</strong></p>\n            <Button size='large' disabled={!wallet.connected} className='ApproveButton Button Dark' type='ghost'\n              onClick={approveBond}>\n              Approve</Button>\n          </Card>\n        </div>\n      </Col>\n      <Col span={8}></Col>\n    </Row>\n  );\n\n  const stakeDescription = (\n    <small>\n      Your deposit of <span className='White'>{stakeDeposit > 0 ? (stakeDeposit / 1).toFixed(2) : 0} {name.toUpperCase()}</span> is\n      set to earn <span className='White'>12% APY</span>\n    </small>\n  );\n\n  const stakeView = (\n    <Row>\n      <Col span={6}></Col>\n      { stakeCard === 'stake' ?\n      <>\n        <Col span={4}>\n          <Steps direction='vertical' current={stakeStep}>\n            <Step key='set' title='Quantity' description={stakeDescription} />\n            <Step key='deposit' title='Approve' description={approveDescription} />\n          </Steps>\n        </Col>\n        <Col span={1}></Col>\n        <Col span={7} className='Cards'>\n          <div className='site-card-border-less-wrapper'>\n            <Card className='Card Dark' title={CHERUB_NAME} bordered={false}\n              extra={<a href='/#/stake' className='CardLink' onClick={() => setStakeCard('positions')}>Positions</a>}>\n              <Input className='StakeInput Input Dark' value={stakeDeposit} placeholder='0'\n                onChange={(e) => {setStakeStep(1); setStakeDeposit(e.target.value)}} />\n              <br/>\n              <p>Your current balance is <strong>{balance > 0 ? (balance / 1).toFixed(2) : 0}</strong></p>\n              <Button size='large' disabled={!wallet.connected} className='ApproveButton Button Dark' type='ghost'>\n                Approve</Button>\n            </Card>\n          </div>\n        </Col>\n      </> :\n      <Col span={12} className='Cards'>\n        <Card className='Card Dark' title={CHERUB_NAME} bordered={false}\n          extra={<a href='/#/stake' className='CardLink' onClick={() => setStakeCard('stake')}>Stake</a>}>\n        </Card>\n      </Col>\n      }\n      <Col span={6}></Col>\n    </Row>\n  );\n\n  const daoView = (\n    <>\n      { daoCard === 'statistics' ?\n      <Row>\n        <Col span={2}></Col>\n        <Col span={20} className='Cards'>\n          <div className='site-card-border-less-wrapper'>\n            <Card className='Card Dark' title='DAO' bordered={false}\n              extra={<a href='/#/dao' className='CardLink' onClick={() => setDAOCard('vote')}>Vote</a>}>\n              <Row>\n                <Col span={6}>\n                  <p>Market Cap</p>\n                  <Title level={3} className='Title Dark'>{cMarketCap}</Title>\n                </Col>\n                <Col span={6}>\n                  <p>Price</p>\n                  <Title level={3} className='Title Dark'>{cCurrentPrice}</Title>\n                </Col>\n                <Col span={6}>\n                  <p>Circulating Supply (Total)</p>\n                  <Title level={3} className='Title Dark'>{cCirculatingSupplyTotal} {CHERUB_NAME}</Title>\n                </Col>\n                <Col span={6}>\n                  <p>Markets</p>\n                  <Title level={3} className='Title Dark'>{tokenCount}</Title>\n                </Col>\n              </Row>\n              <br/>\n              <Row>\n                <Col span={12}>\n                  <p>Total Value Deposited</p>\n                  <Line height={100} data={tvdData} options={chartOptions}/>\n                </Col>\n                <Col span={12}>\n                  <p>Market Value of Treasury Assets</p>\n                  <Line height={100} data={treasuryData} options={chartOptions}/>\n                </Col>\n              </Row>\n            </Card>\n          </div>\n        </Col>\n        <Col span={2}></Col>\n      </Row>\n          :\n          <Row>\n            <Col span={2}></Col>\n            <Col span={20} className='Cards'>\n              <div className='site-card-border-less-wrapper'>\n                <Card className='Card Dark' title='DAO' bordered={false}\n                  extra={<a href='/#/dao' className='CardLink' onClick={(e) => setDAOCard('statistics')}>Statistics</a>}>\n                  <List itemLayout='horizontal' dataSource={daoProposals}\n                    renderItem={item => (\n                      <List.Item><List.Item.Meta title={item.title} description={item.description} />{item.icon}</List.Item>\n                    )}/>\n                </Card>\n              </div>\n            </Col>\n            <Col span={2}></Col>\n          </Row>\n      }\n    </>\n  );\n\n  useEffect(() => {\n    // TODO: This fires every second, minimize this\n    getBalanceCallback();\n    getDashboardDataCallback();\n    getFactoryDataCallback();\n\n    if (!isInverseDataSet) {\n      setIsInverseSet(true);\n      getInverseDataCallback(DEFAULT_NAME);\n    }\n  }, [getBalanceCallback, getDashboardDataCallback, getFactoryDataCallback, getInverseDataCallback, isInverseDataSet]);\n\n  useEffect(() => {\n    const routes = ['dao', 'inverse', 'stake', 'bond'];\n    if (window.location.href.split('#/').length === 2 && routes.indexOf(window.location.href.split('#/')[1]) >= 0) {\n      setMenu(window.location.href.split('#/')[1]);\n    } else {\n      window.location.href = '/#/' + routes[0];\n    }\n  }, [setMenu]);\n\n  useEffect(() => {\n    getProviderCallback().then(function(provider) {\n      if (!blockHeightInterval) {\n        try {\n          setBlockHeightInterval(true);\n          setInterval(function () {\n            provider.connection.getEpochInfo().then(function(epochInfo) {\n              setBlockHeight(epochInfo.blockHeight);\n            });\n          }, 10000);\n        } catch (e) {\n          networkErrorMessage();\n        }\n      }\n    });\n  }, [blockHeightInterval, getProviderCallback]);\n\n  useEffect(() => {\n    if (!countdownInterval) {\n      try {\n        setCountdownInterval(true);\n        setInterval(function () {\n          calculateCountdown();\n        }, 1000);\n      } catch (e) {\n        networkErrorMessage();\n      }\n    }\n  }, [countdownInterval, setCountdownInterval]);\n\n  return (\n    <Layout className='App Dark'>\n      { showBanner ?\n      <Alert type='info' className='Banner' closable\n        message=<span>You are currently using an unaudited piece of software via {network}. Use at your own risk.</span> /> : null\n      }\n      <Header className='Header Dark'>\n        <Row>\n          <Col span={5}>\n            <div className='Logo Dark'>\n              <img src='/logo.svg' alt='Logo' className='LogoImage'/>\n              <strong className='LogoText' onClick={() => window.open(githubUrl, '_blank')}>{name}</strong>\n            </div>\n          </Col>\n          <Col span={14} className='ColCentered'>\n            <Menu className='Menu Dark' onClick={(e) => {setMenu(e.key); window.location.href = '/#/' + e.key}} selectedKeys={[menu]}\n              mode='horizontal'>\n              <Menu.Item key='dao'>DAO</Menu.Item>\n              <Menu.Item key='inverse'>Inverse Perpetuals</Menu.Item>\n              <Menu.Item key='bond'>Bond</Menu.Item>\n              <Menu.Item key='stake' onClick={() => {setInverseAsset(CHERUB_NAME)}}>Stake</Menu.Item>\n            </Menu>\n          </Col>\n          <Col span={5} className='ConnectWalletHeader'>\n            { !wallet.connected ?\n            <>\n              <WalletMultiButton className='WalletMultiButton'/>\n              <Button className='ConnectWalletButton' onClick={(e) => document.getElementsByClassName('WalletMultiButton')[0].click()}\n                type='link'>Connect Wallet</Button>\n            </> :\n            <Button className='ConnectWalletButton' type='link'>\n              <code className='SolCount'>{balance > 0 ? (balance / 1).toFixed(2) : 0 } {inverseAsset}</code>\n              <code>{wallet.publicKey.toString().substr(0, 4)}...{wallet.publicKey.toString().substr(-4)}</code>\n            </Button>\n            }\n            <Dropdown className='Dropdown SettingsDropdown' overlay={settingsMenu}><SettingOutlined/></Dropdown>\n          </Col>\n        </Row>\n      </Header>\n      <Layout className='Layout Dark'>\n        <Content>\n          <div>\n            <br/>\n            <br/>\n            { menu === 'inverse' ? inverseView : null }\n            { menu === 'stake' ? stakeView : null }\n            { menu === 'bond' ? bondView : null }\n            { menu === 'dao' ? daoView : null }\n          </div>\n        </Content>\n      </Layout>\n      <Footer className='Footer'><code className='BlockHeight'><small>• {blockHeight}</small></code></Footer>\n      <Modal title='Assets' footer={null} visible={isInverseAssetModalVisible} onCancel={() => {setIsInverseAssetModalVisible(false)}}>\n        <List itemLayout='horizontal' dataSource={accounts.exchanges} forcerender='true'\n          renderItem={exchange => (\n            <List.Item className='Asset ListItem'>\n              <List.Item.Meta title={exchange.name}\n                onClick={() => {setInverseAsset(exchange.name); getInverseData(exchange.name); setIsInverseAssetModalVisible(false)}}/>\n            </List.Item>\n          )}\n        />\n      </Modal>\n    </Layout>\n  );\n}\n\nconst AppWithProvider = () => (\n  <ConnectionProvider endpoint={network}>\n    <WalletProvider wallets={wallets} autoConnect>\n      <WalletModalProvider>\n        <App/>\n      </WalletModalProvider>\n    </WalletProvider>\n  </ConnectionProvider>\n);\n\nexport default AppWithProvider;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}