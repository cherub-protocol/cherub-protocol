{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["accounts","window","location","origin","require","Content","Layout","Footer","Header","Option","Select","Step","Steps","Title","Typography","Direction","Long","long","Short","short","CHERUB","exchanges","find","x","symbol","SOL","githubUrl","network","clusterApiUrl","opts","showBanner","wallets","getPhantomWallet","getSolletWallet","getSlopeWallet","DEFAULT_SYMBOL","getWindowRoute","chartOptions","scales","display","grid","y","plugins","legend","daoProposals","title","description","icon","className","treasuryData","labels","datasets","data","fill","borderColor","backgroundColor","tvdData","currencyFormat","toFixed","replace","routes","href","split","length","indexOf","App","useState","balance","setBalance","blockHeight","setBlockHeight","blockHeightInterval","setBlockHeightInterval","bondDeposit","setBondDeposit","cCirculatingSupplyTotal","setCCirculatingSupplyTotal","cCurrentPrice","setCCurrentPrice","cMarketCap","setCMarketCap","change24H","setChange24H","countdown","setCountdown","countdownInterval","setCountdownInterval","accountV","token","currentExchange","setCurrentExchange","currentMarketPrice","setCurrentMarketPrice","daoCard","setDAOCard","exchangeRate","setExchangeRate","fundingRate","setFundingRate","gasFee","high24H","setHigh24H","isInverseAssetModalVisible","setIsInverseAssetModalVisible","isInverseDataSet","setIsInverseSet","indexPrice","setIndexPrice","inverseAsset","setInverseAsset","inverseCard","setInverseCard","inverseDirection","setInverseDirection","inverseQuantity","setInverseQuantity","inverseStep","setInverseStep","leverage","setLeverage","low24H","setLow24H","menu","setMenu","stakeCard","setStakeCard","stakeDeposit","setStakeDeposit","stakeStep","setStakeStep","tokenCount","setTokenCount","turnaround24H","setTurnaround24H","wallet","useWallet","getProviderCallback","useCallback","getProvider","getBalanceCallback","connected","publicKey","getDashboardDataCallback","getFactoryDataCallback","getInverseDataCallback","getInverseData","a","connection","Connection","Provider","provider","getBalance","LAMPORTS_PER_SOL","tokenV","Token","PublicKey","TOKEN_PROGRAM_ID","getAccountInfo","accountVInfo","getMintInfo","mintVInfo","amount","toNumber","decimals","factory","Program","factoryIdl","metadata","address","account","factoryData","fetch","console","log","exchange","exchangeIdl","tokenC","tokenS","mintCInfo","mintSInfo","supply","total","exchangeData","exchangeDataAccount","lastPrice","networkErrorMessage","message","info","setDummyInverseData","marketIndex","Math","random","asset","exchangePublicKey","exchangeAccount","mintAPublicKey","tokenA","mintAInfo","tokenB","getAssociatedTokenAddress","ASSOCIATED_TOKEN_PROGRAM_ID","walletTokenAccountA","walletTokenAccountB","exchangePositionAccount","Keypair","generate","findProgramAddress","Buffer","from","utils","bytes","utf8","encode","programId","pda","aToBAmountA","BN","equityA","rpc","aToBInput","Date","now","authority","clock","SYSVAR_CLOCK_PUBKEY","exchangeA","accountA","exchangeB","accountB","position","recipient","systemProgram","SystemProgram","tokenProgram","userA","userB","signers","tx","link","notification","open","rel","target","duration","placement","mintBInfo","walletTokenAccountC","walletTokenAccountV","maxAmountA","amountB","minLiquidityC","bond","exchangeV","mint","userC","userV","owner","walletTokenAccountS","amountC","stake","factoryC","mintS","userS","settingsMenu","Item","onClick","assetTitleModal","type","inverseStatsBar","span","level","inverseQuantityDescription","approveDescription","leverageDescription","inverseView","bordered","extra","value","placeholder","addonAfter","defaultValue","onChange","e","Group","optionType","buttonStyle","Button","min","onAfterChange","size","disabled","direction","current","bondView","stakeDescription","toUpperCase","stakeView","daoView","height","options","itemLayout","dataSource","renderItem","item","Meta","useEffect","then","setInterval","getEpochInfo","epochInfo","today","deadline","setHours","delta","getTime","hours","floor","mins","secs","slice","calculateCountdown","src","alt","key","selectedKeys","mode","toString","substr","document","getElementsByClassName","click","overlay","footer","visible","onCancel","forcerender","AppWithProvider","endpoint","autoConnect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.42eecda2.chunk.js","sourcesContent":["import {\n  Alert, Button, Card, Col, Dropdown, Input, Layout, List, Modal, Menu, Radio, Row, Select, Slider, Steps, Typography, message,\n  notification\n} from 'antd';\nimport { CheckCircleOutlined, ClockCircleOutlined, CloseCircleOutlined, DownOutlined, SettingOutlined } from '@ant-design/icons';\nimport { BN, Program, Provider, utils } from '@project-serum/anchor';\nimport { useEffect, useCallback, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { ConnectionProvider, WalletProvider, useWallet  } from '@solana/wallet-adapter-react';\nimport { WalletModalProvider, WalletMultiButton } from '@solana/wallet-adapter-react-ui';\nimport { getPhantomWallet, getSlopeWallet, getSolletWallet } from '@solana/wallet-adapter-wallets';\nimport { Connection, Keypair, LAMPORTS_PER_SOL, PublicKey, SYSVAR_CLOCK_PUBKEY, SystemProgram, clusterApiUrl } from '@solana/web3.js';\nimport { ASSOCIATED_TOKEN_PROGRAM_ID, TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\n\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nimport exchangeIdl from './exchange.json';\nimport factoryIdl from './factory.json';\n\nvar accounts = {};\n\nif (window.location.origin === 'http://127.0.0.1:3000') {\n  accounts = require('./accounts-localnet.json');\n} else {\n  accounts = require('./accounts-devnet.json');\n}\n\nconst { Content, Footer, Header } = Layout;\nconst { Option } = Select;\nconst { Step } = Steps;\nconst { Title } = Typography;\n\nconst Direction = {\n  Long: { long: {} },\n  Short: { short: {} },\n};\n\nconst CHERUB = accounts.exchanges.find((x) => x.symbol === 'CHRB');\nconst SOL = accounts.exchanges.find((x) => x.symbol === 'SOL');\nconst githubUrl = 'https://www.github.com/cherub-so/cherub-protocol';\nconst logoText = 'cheruβ';\nconst network = window.location.origin === 'http://127.0.0.1:3000' ? 'http://127.0.0.1:8899' : clusterApiUrl('devnet');\nconst opts = { preflightCommitment: 'processed' };\nconst showBanner = network !== 'http://127.0.0.1:8899';\nconst wallets = [getPhantomWallet(), getSolletWallet(), getSlopeWallet()];\n\nconst DEFAULT_SYMBOL = getWindowRoute() === 'stake' ? CHERUB.symbol : SOL.symbol;\n\nconst chartOptions = {\n  scales: {\n    x: {\n      display: true,\n      grid: { display: false },\n    },\n    y: {\n      display: true,\n      grid: { display: false },\n    }\n  },\n  plugins: {\n    legend: { display: false }\n  }\n}\n\nconst daoProposals = [{\n  title: 'Move SOL/COPE stake to SOL/MANGO',\n  description: '4 • September 25th, 2021',\n  icon: <ClockCircleOutlined className='ClockCircleOutlined'/>\n}, {\n  title: 'Contributor Grant: Tim Su',\n  description: '3 • Executed September 12th, 2021',\n  icon: <CheckCircleOutlined className='CheckCircleOutlined'/>\n}, {\n  title: 'Add AAVE, SUSHI, YFI',\n  description: '2 • Executed September 2nd, 2021',\n  icon: <CloseCircleOutlined className='CloseCircleOutlined'/>\n}, {\n  title: 'Set Pause Guardian to Community Multi-Sig',\n  description: '1 • Executed September 1st, 2021',\n  icon: <CheckCircleOutlined className='CheckCircleOutlined'/>\n}];\n\nconst treasuryData = {\n  labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n  datasets: [{\n    data: [0, 7, 6, 10, 24, 51, 54, 176],\n    fill: true,\n    borderColor: '#40a9ff',\n    backgroundColor: '#69c0ff',\n  }]\n};\n\nconst tvdData = {\n  labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n  datasets: [{\n    data: [0, 5, 10, 33, 35, 51, 54, 76],\n    fill: true,\n    borderColor: '#40a9ff',\n    backgroundColor: '#69c0ff'\n  }]\n};\n\nfunction currencyFormat(x) {\n  return '$' + x.toFixed(0).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n}\n\nfunction getWindowRoute() {\n  const routes = ['dao', 'inverse', 'stake', 'bond'];\n  if (window.location.href.split('#/').length === 2 && routes.indexOf(window.location.href.split('#/')[1]) >= 0) {\n    return window.location.href.split('#/')[1];\n  } else {\n    // First route is default route\n    return routes[0];\n  }\n}\n\nfunction App() {\n  const [balance, setBalance] = useState(0);\n  const [blockHeight, setBlockHeight] = useState(0);\n  const [blockHeightInterval, setBlockHeightInterval] = useState(false);\n  const [bondDeposit, setBondDeposit] = useState();\n  const [cCirculatingSupplyTotal, setCCirculatingSupplyTotal] = useState('0 / 0');\n  const [cCurrentPrice, setCCurrentPrice] = useState(0);\n  const [cMarketCap, setCMarketCap] = useState(0);\n  const [change24H, setChange24H] = useState();\n  // eslint-disable-next-line\n  const [countdown, setCountdown] = useState('');\n  const [countdownInterval, setCountdownInterval] = useState(false);\n  const [currentExchange, setCurrentExchange] = useState({ accountV: null, token: null, symbol: null });\n  const [currentMarketPrice, setCurrentMarketPrice] = useState();\n  const [daoCard, setDAOCard] = useState('statistics');\n  const [exchangeRate, setExchangeRate] = useState(0);\n  const [fundingRate, setFundingRate] = useState();\n  // eslint-disable-next-line\n  const [gasFee, setGasFee] = useState();\n  const [high24H, setHigh24H] = useState();\n  const [isInverseAssetModalVisible, setIsInverseAssetModalVisible] = useState(false);\n  const [isInverseDataSet, setIsInverseSet] = useState(false);\n  const [indexPrice, setIndexPrice] = useState();\n  const [inverseAsset, setInverseAsset] = useState(DEFAULT_SYMBOL);\n  const [inverseCard, setInverseCard] = useState('inverse');\n  const [inverseDirection, setInverseDirection] = useState('long');\n  const [inverseQuantity, setInverseQuantity] = useState();\n  const [inverseStep, setInverseStep] = useState(0);\n  const [leverage, setLeverage] = useState(1);\n  const [low24H, setLow24H] = useState();\n  const [menu, setMenu] = useState('');\n  const [stakeCard, setStakeCard] = useState('stake');\n  const [stakeDeposit, setStakeDeposit] = useState();\n  const [stakeStep, setStakeStep] = useState(0);\n  const [tokenCount, setTokenCount] = useState(0);\n  const [turnaround24H, setTurnaround24H] = useState();\n\n  const wallet = useWallet();\n\n  const getProviderCallback = useCallback(getProvider, [getProvider]);\n\n  const getBalanceCallback = useCallback(getBalance, [getProviderCallback, currentExchange.token, currentExchange.accountV, wallet.connected,\n    wallet.publicKey]);\n  const getDashboardDataCallback = useCallback(getDashboardData, [getProviderCallback]);\n  const getFactoryDataCallback = useCallback(getFactoryData, [getProviderCallback]);\n  const getInverseDataCallback = useCallback(getInverseData, [getProviderCallback]);\n\n  async function getProvider() {\n    const connection = new Connection(network, opts.preflightCommitment);\n    return new Provider(connection, wallet, opts.preflightCommitment);\n  }\n\n  async function getBalance() {\n    const provider = await getProviderCallback();\n    if (wallet.connected) {\n      if (currentExchange.token === SOL.token) {\n        const balance = await provider.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      } else {\n        const tokenV = new Token(provider.connection, new PublicKey(currentExchange.token), TOKEN_PROGRAM_ID);\n        const accountVInfo = await tokenV.getAccountInfo(new PublicKey(currentExchange.accountV));\n        const mintVInfo = await tokenV.getMintInfo();\n        setBalance((accountVInfo.amount.toNumber() / (10 ** mintVInfo.decimals)).toFixed(2));\n      }\n    }\n  }\n\n  async function getFactoryData() {\n    const provider = await getProviderCallback();\n    const factory = new Program(factoryIdl, new PublicKey(factoryIdl.metadata.address), provider);\n    try {\n      const account = await factory.account.factoryData.fetch(new PublicKey(accounts.factory.account));\n      setTokenCount(account.tokenCount.toNumber());\n    } catch (err) {\n      console.log('Transaction error: ', err);\n    }\n  }\n\n  async function getDashboardData() {\n    const provider = await getProviderCallback();\n    const exchange = new Program(exchangeIdl, new PublicKey(exchangeIdl.metadata.address), provider);\n    try {\n      const tokenC = new Token(provider.connection, new PublicKey(accounts.factory.tokenC), TOKEN_PROGRAM_ID);\n      const tokenS = new Token(provider.connection, new PublicKey(accounts.factory.tokenS), TOKEN_PROGRAM_ID);\n      const mintCInfo = await tokenC.getMintInfo();\n      const mintSInfo = await tokenS.getMintInfo();\n      const supply = mintSInfo.supply.toNumber() / (10 ** mintSInfo.decimals);\n      const total = mintCInfo.supply.toNumber() / (10 ** mintCInfo.decimals);\n      setCCirculatingSupplyTotal(supply.toFixed(0) + ' / ' + total.toFixed(0));\n      const exchangeDataAccount = await exchange.account.exchangeData.fetch(new PublicKey(CHERUB.account));\n      const lastPrice = (exchangeDataAccount.lastPrice.toNumber() / (10 ** mintCInfo.decimals)).toFixed(2);\n      setCCurrentPrice(currencyFormat(lastPrice / 1));\n      setCMarketCap(currencyFormat(lastPrice * total));\n    } catch (err) {\n      console.log('Transaction error: ', err);\n    }\n  }\n\n  function networkErrorMessage() {\n    message.info('Unable to connect to network');\n  }\n\n  function setDummyInverseData(lastPrice) {\n    const marketIndex = lastPrice * (Math.random() / 100 + 0.9);\n    setChange24H('+' + (lastPrice > 0 ? (Math.random() / 100 + 2).toFixed(2) : 0));\n    setCurrentMarketPrice(lastPrice);\n    setFundingRate(lastPrice > 0 ? ((lastPrice - marketIndex) / 1000).toFixed(4) : 0);\n    setHigh24H((lastPrice * (Math.random() / 100 + 1.1)).toFixed(2));\n    setIndexPrice(marketIndex.toFixed(2));\n    setLow24H((lastPrice * (Math.random() / 100 + 0.9)).toFixed(2));\n    setTurnaround24H((lastPrice * (Math.random() * 10000 + 1.3)).toFixed(0));\n  }\n\n  async function getInverseData(asset) {\n    const provider = await getProviderCallback();\n    const exchangePublicKey = new PublicKey(accounts.exchanges.find((x) => x.symbol === asset).account);\n    const exchange = new Program(exchangeIdl, new PublicKey(exchangeIdl.metadata.address), provider);\n\n    try {\n      const exchangeAccount = await exchange.account.exchangeData.fetch(exchangePublicKey);\n      const mintAPublicKey = accounts.exchanges.find((x) => x.symbol === asset).tokenA;\n      const tokenA = new Token(provider.connection, new PublicKey(mintAPublicKey), TOKEN_PROGRAM_ID, null);\n      const mintAInfo = await tokenA.getMintInfo();\n      const lastPrice = (exchangeAccount.lastPrice.toNumber() / (10 ** mintAInfo.decimals)).toFixed(2);\n\n      setDummyInverseData(lastPrice);\n      setExchangeRate(lastPrice);\n    } catch (err) {\n      console.log('Transaction error: ', err);\n    }\n\n    setInverseStep(0);\n    setInverseQuantity();\n  }\n\n  async function approveInverse() {\n    const provider = await getProviderCallback();\n    const exchange = new Program(exchangeIdl, new PublicKey(exchangeIdl.metadata.address), provider);\n    const exchangePublicKey = new PublicKey(currentExchange.account);\n\n    const tokenA = new Token(provider.connection, new PublicKey(currentExchange.tokenA), TOKEN_PROGRAM_ID);\n    const tokenB = new Token(provider.connection, new PublicKey(currentExchange.tokenB), TOKEN_PROGRAM_ID);\n    const mintAInfo = await tokenA.getMintInfo();\n\n    const walletTokenAccountA = await Token.getAssociatedTokenAddress(\n      ASSOCIATED_TOKEN_PROGRAM_ID,\n      TOKEN_PROGRAM_ID,\n      tokenA.publicKey,\n      provider.wallet.publicKey\n    );\n    const walletTokenAccountB = await Token.getAssociatedTokenAddress(\n      ASSOCIATED_TOKEN_PROGRAM_ID,\n      TOKEN_PROGRAM_ID,\n      tokenB.publicKey,\n      provider.wallet.publicKey\n    );\n\n    // TODO: Make PDA\n    const exchangePositionAccount = Keypair.generate();\n    // eslint-disable-next-line\n    const [pda, nonce] = await PublicKey.findProgramAddress(\n      [Buffer.from(utils.bytes.utf8.encode('exchange'))],\n      exchange.programId\n    );\n    const aToBAmountA = new BN(inverseQuantity * leverage * (10 ** mintAInfo.decimals));\n    const equityA = new BN(inverseQuantity * (10 ** mintAInfo.decimals));\n\n    try {\n      const tx = await exchange.rpc.aToBInput(\n        aToBAmountA,\n        new BN(Date.now() + 5000 / 1000),\n        inverseDirection === 'long' ? Direction.Long : Direction.Short,\n        equityA,\n        {\n          accounts: {\n            authority: provider.wallet.publicKey,\n            clock: SYSVAR_CLOCK_PUBKEY,\n            exchange: exchangePublicKey,\n            exchangeA: currentExchange.accountA,\n            exchangeB: currentExchange.accountB,\n            pda,\n            position: exchangePositionAccount.publicKey,\n            recipient: walletTokenAccountA,\n            systemProgram: SystemProgram.programId,\n            tokenProgram: TOKEN_PROGRAM_ID,\n            userA: walletTokenAccountA,\n            userB: walletTokenAccountB\n          },\n          signers: [exchangePositionAccount]\n        });\n\n      const link = 'https://explorer.solana.com/tx/' + tx;\n\n      notification.open({\n        message: 'Order Successfully Placed',\n        description: <div>Your transaction signature is <a href={link} rel='noreferrer' target='_blank'><code>{tx}</code></a></div>,\n        duration: 0,\n        placement: 'bottomLeft'\n      });\n\n      setInverseStep(0);\n      setLeverage(1);\n      setInverseQuantity();\n\n      getInverseDataCallback(currentExchange.symbol);\n    } catch (err) {\n      console.log('Transaction error: ', err);\n    }\n  }\n\n  async function approveBond() {\n    const provider = await getProviderCallback();\n    const exchange = new Program(exchangeIdl, new PublicKey(exchangeIdl.metadata.address), provider);\n\n    const tokenA = new Token(provider.connection, new PublicKey(currentExchange.tokenA), TOKEN_PROGRAM_ID);\n    const tokenB = new Token(provider.connection, new PublicKey(currentExchange.tokenB), TOKEN_PROGRAM_ID);\n    const tokenC = new Token(provider.connection, new PublicKey(accounts.factory.tokenC), TOKEN_PROGRAM_ID);\n    const tokenV = new Token(provider.connection, new PublicKey(currentExchange.tokenV), TOKEN_PROGRAM_ID);\n\n    const mintAInfo = await tokenA.getMintInfo();\n    const mintBInfo = await tokenB.getMintInfo();\n\n    const walletTokenAccountA = await Token.getAssociatedTokenAddress(\n      ASSOCIATED_TOKEN_PROGRAM_ID,\n      TOKEN_PROGRAM_ID,\n      tokenA.publicKey,\n      provider.wallet.publicKey\n    );\n    const walletTokenAccountB = await Token.getAssociatedTokenAddress(\n      ASSOCIATED_TOKEN_PROGRAM_ID,\n      TOKEN_PROGRAM_ID,\n      tokenB.publicKey,\n      provider.wallet.publicKey\n    );\n    const walletTokenAccountC = await Token.getAssociatedTokenAddress(\n      ASSOCIATED_TOKEN_PROGRAM_ID,\n      TOKEN_PROGRAM_ID,\n      tokenC.publicKey,\n      provider.wallet.publicKey\n    );\n    // TODO: SOL account is not associated token address\n    const walletTokenAccountV = await Token.getAssociatedTokenAddress(\n      ASSOCIATED_TOKEN_PROGRAM_ID,\n      TOKEN_PROGRAM_ID,\n      tokenV.publicKey,\n      provider.wallet.publicKey\n    );\n\n    // eslint-disable-next-line\n    const [pda, nonce] = await PublicKey.findProgramAddress(\n      [Buffer.from(utils.bytes.utf8.encode('exchange'))],\n      exchange.programId\n    );\n    // TODO: Not accurate\n    const maxAmountA = bondDeposit * (10 ** mintAInfo.decimals);\n    const amountB = (maxAmountA / (currentMarketPrice * (10 ** mintAInfo.decimals))) * (10 ** mintBInfo.decimals);\n    const minLiquidityC = amountB / 1000;\n\n    try {\n      const tx = await exchange.rpc.bond(\n        new BN(maxAmountA.toFixed(0)),\n        new BN(amountB.toFixed(0)),\n        new BN(minLiquidityC.toFixed(0)),\n        new BN(Date.now() + 5000 / 1000), {\n          accounts: {\n            authority: provider.wallet.publicKey,\n            clock: SYSVAR_CLOCK_PUBKEY,\n            exchange: currentExchange.account,\n            exchangeA: currentExchange.accountA,\n            exchangeB: currentExchange.accountB,\n            exchangeV: currentExchange.accountV,\n            mint: new PublicKey(accounts.factory.tokenC),\n            tokenProgram: TOKEN_PROGRAM_ID,\n            userA: walletTokenAccountA,\n            userB: walletTokenAccountB,\n            userC: walletTokenAccountC,\n            userV: walletTokenAccountV\n          },\n          signers: [provider.wallet.owner]\n        });\n      const link = 'https://explorer.solana.com/tx/' + tx;\n\n      notification.open({\n        message: 'Order Successfully Placed',\n        description: <div>Your transaction signature is <a href={link} rel='noreferrer' target='_blank'><code>{tx}</code></a></div>,\n        duration: 0,\n        placement: 'bottomLeft'\n      });\n\n      setBondDeposit();\n      getInverseDataCallback(currentExchange.symbol);\n    } catch (err) {\n      console.log('Transaction error: ', err);\n    }\n  }\n\n  async function approveStake() {\n    const provider = await getProviderCallback();\n    const factory = new Program(factoryIdl, new PublicKey(factoryIdl.metadata.address), provider);\n\n    const tokenC = new Token(provider.connection, new PublicKey(accounts.factory.tokenC), TOKEN_PROGRAM_ID);\n    const tokenS = new Token(provider.connection, new PublicKey(accounts.factory.tokenS), TOKEN_PROGRAM_ID);\n    const mintCInfo = await tokenC.getMintInfo();\n\n    const walletTokenAccountC = await Token.getAssociatedTokenAddress(\n      ASSOCIATED_TOKEN_PROGRAM_ID,\n      TOKEN_PROGRAM_ID,\n      tokenC.publicKey,\n      provider.wallet.publicKey\n    );\n    const walletTokenAccountS = await Token.getAssociatedTokenAddress(\n      ASSOCIATED_TOKEN_PROGRAM_ID,\n      TOKEN_PROGRAM_ID,\n      tokenS.publicKey,\n      provider.wallet.publicKey\n    );\n\n    const amountC = new BN(stakeDeposit * (10 ** mintCInfo.decimals));\n\n    try {\n      const tx = await factory.rpc.stake(\n        new BN(amountC), {\n          accounts: {\n            authority: provider.wallet.publicKey,\n            factory: new PublicKey(accounts.factory),\n            factoryC: new PublicKey(accounts.factoryC),\n            mintS: tokenS.publicKey,\n            tokenProgram: TOKEN_PROGRAM_ID,\n            userC: walletTokenAccountC,\n            userS: walletTokenAccountS,\n          },\n          signers: [provider.wallet.owner]\n        }\n      );\n      const link = 'https://explorer.solana.com/tx/' + tx;\n\n      notification.open({\n        message: 'Order Successfully Placed',\n        description: <div>Your transaction signature is <a href={link} rel='noreferrer' target='_blank'><code>{tx}</code></a></div>,\n        duration: 0,\n        placement: 'bottomLeft'\n      });\n\n      setStakeStep(0);\n      setStakeDeposit();\n    } catch (err) {\n      console.log('Transaction error: ', err);\n    }\n  }\n\n  // TODO: No longer needed with continuous funding, need to understand price oracle better\n  function calculateCountdown() {\n    // eslint-disable-next-line\n    const today = new Date();\n    // eslint-disable-next-line\n    const deadline = new Date();\n    deadline.setHours(24, 0, 0, 0);\n    // eslint-disable-next-line\n    const delta = deadline.getTime() - today.getTime();\n    // eslint-disable-next-line\n    const hours = Math.floor((delta % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    // eslint-disable-next-line\n    const mins = Math.floor((delta % (1000 * 60 * 60)) / (1000 * 60));\n    // eslint-disable-next-line\n    const secs = Math.floor((delta % (1000 * 60)) / 1000);\n    setCountdown(('0' + hours).slice(-2) + ':' + ('0' + mins).slice(-2) + ':' + ('0' + secs).slice(-2));\n  }\n\n  const settingsMenu = (\n    <Menu>\n      <Menu.Item key='github' onClick={() => window.open(githubUrl, '_blank')}>GitHub</Menu.Item>\n      <Menu.Item key='discord'>Discord</Menu.Item>\n    </Menu>\n  );\n\n  const assetTitleModal = (\n    <Button className='AssetTitleModal' type='link' onClick={() => setIsInverseAssetModalVisible(true)}>{inverseAsset} <DownOutlined/></Button>\n  );\n\n  const inverseStatsBar = (\n    <Row className='InverseStatsBar'>\n      <Col span={3}></Col>\n      <Col span={3}>\n        <p><small>Market / Index</small></p>\n        <Title level={5} className='Title Dark Green'>{currentMarketPrice}<span className='White'> / {indexPrice}</span></Title>\n      </Col>\n      <Col span={3}>\n        <p><small>24H Change (%)</small></p>\n        <Title level={5} className='Title Dark Green'>{change24H}</Title>\n      </Col>\n      <Col span={3}>\n        <p><small>24H High</small></p>\n        <Title level={5} className='Title Dark'>{high24H}</Title>\n      </Col>\n      <Col span={3}>\n        <p><small>24H Low</small></p>\n        <Title level={5} className='Title Dark'>{low24H}</Title>\n      </Col>\n      <Col span={3}>\n        <p><small>24H Turnaround ({inverseAsset})</small></p>\n        <Title level={5} className='Title Dark'>{turnaround24H}</Title>\n      </Col>\n      <Col span={3}>\n        <p><small>Funding (%) / Countdown</small></p>\n        <Title level={5} className='Title Dark'><span className='Yellow'>{fundingRate}</span> / {countdown}</Title>\n      </Col>\n      <Col span={3}></Col>\n    </Row>\n  );\n\n  const inverseQuantityDescription = (\n    <small>Your order amount of <span className='White'>{inverseQuantity > 0 ? (inverseQuantity / 1).toFixed(2) : 0} USD</span> equals <span\n        className='White'>{inverseQuantity > 0 ? (inverseQuantity / currentMarketPrice).toFixed(2) : 0} {inverseAsset}</span></small>\n  );\n\n  const approveDescription = (<small>This transaction requires <span className='White'>{gasFee > 0 ? (gasFee / 1).toFixed(2) : 0} SOL</span></small>);\n\n  const leverageDescription = (\n    <small>At <span className='White'>{leverage}x</span> leverage your position is worth <span className='White'>\n        {inverseQuantity > 0 ? (inverseQuantity / currentMarketPrice * leverage).toFixed(2) : 0} {inverseAsset}</span></small>\n  );\n\n  const inverseView = (\n    <>\n      {inverseStatsBar}\n      <br/>\n      <Row>\n        <Col span={6}></Col>\n        { inverseCard === 'inverse' ?\n        <>\n          <Col span={8} className='Cards'>\n            <div className='site-card-border-less-wrapper'>\n              <Card title={assetTitleModal} className='Card Dark' bordered={false}\n                extra={<a href='/#/inverse' className='CardLink' onClick={() => setInverseCard('positions')}>Positions</a>}>\n                <p><strong>Quantity</strong></p>\n                <Input className='InverseInput Input Dark' value={inverseQuantity} placeholder='0'\n                  addonAfter={<Select defaultValue='USD' className='select-after'><Option value='USD'>USD</Option></Select>}\n                  onChange={(e) => {setInverseQuantity(e.target.value); setInverseStep(1)}} />\n                <br/>\n                <p>Your current exchange rate is 1 USD = {exchangeRate} {inverseAsset}</p>\n                <Radio.Group onChange={(e) => setInverseDirection(e.target.value)} className='RadioGroup Dark' optionType='button' buttonStyle='solid'\n                  value={inverseDirection}>\n                  <Radio.Button className='BuyButton' value='long'>Buy / Long</Radio.Button>\n                  <Radio.Button className='SellButton' value='short'>Sell / Short</Radio.Button>\n                </Radio.Group>\n                <br/>\n                <br/>\n                <p><strong>{leverage}x Leverage</strong></p>\n                <Slider defaultValue={1} min={1} onAfterChange={(e) => {setLeverage(e); setInverseStep(2)}} />\n                <br/>\n                <Button size='large' disabled={!wallet.connected} onClick={approveInverse} className='InverseButton Button Dark' type='ghost'>\n                  Approve\n                </Button>\n              </Card>\n            </div>\n          </Col>\n          <Col span={1}></Col>\n          <Col span={3}>\n            <Steps direction='vertical' current={inverseStep}>\n              <Step key='set' title='Quantity' description={inverseQuantityDescription}/>\n              <Step key='collateral' title='Leverage' description={leverageDescription}/>\n              <Step key='order' title='Approve' description={approveDescription}/>\n            </Steps>\n          </Col>\n        </> :\n        <Col span={12} className='Cards'>\n          <div className='site-card-border-less-wrapper'>\n            <Card title={assetTitleModal} className='Card Dark' bordered={false}\n              extra={<a href='/#/inverse' className='CardLink' onClick={() => setInverseCard('inverse')}>Inverse</a>}>\n            </Card>\n          </div>\n        </Col>\n        }\n        <Col span={6}></Col>\n      </Row>\n    </>\n  );\n\n  const bondView = (\n    <Row>\n      <Col span={8}></Col>\n      <Col span={8} className='Cards'>\n        <div className='site-card-border-less-wrapper'>\n          <Card className='Card Dark' title={assetTitleModal} bordered={false}\n            extra={<a href='/#/bond' className='CardLink' onClick={(e) => {}}>Positions</a>}>\n            <Input className='StakeInput Input Dark' value={bondDeposit} placeholder='0' onChange={(e) => setBondDeposit(e.target.value)} />\n            <br/>\n            <p>Your current balance is <strong>{balance > 0 ? (balance / 1).toFixed(2) : 0}</strong></p>\n            <Button size='large' disabled={!wallet.connected} className='ApproveButton Button Dark' type='ghost' onClick={approveBond}>Approve</Button>\n          </Card>\n        </div>\n      </Col>\n      <Col span={8}></Col>\n    </Row>\n  );\n\n  const stakeDescription = (\n    <small>Your deposit of <span className='White'>{stakeDeposit > 0 ? (stakeDeposit / 1).toFixed(2) : 0} {CHERUB.symbol.toUpperCase()}</span>&nbsp;\n      is set to earn <span className='White'>12% APY</span>\n    </small>\n  );\n\n  const stakeView = (\n    <Row>\n      <Col span={6}></Col>\n      { stakeCard === 'stake' ?\n      <>\n        <Col span={4}>\n          <Steps direction='vertical' current={stakeStep}>\n            <Step key='set' title='Quantity' description={stakeDescription} />\n            <Step key='deposit' title='Approve' description={approveDescription} />\n          </Steps>\n        </Col>\n        <Col span={1}></Col>\n        <Col span={7} className='Cards'>\n          <div className='site-card-border-less-wrapper'>\n            <Card className='Card Dark' title={CHERUB.symbol} bordered={false}\n              extra={<a href='/#/stake' className='CardLink' onClick={() => setStakeCard('positions')}>Positions</a>}>\n              <Input className='StakeInput Input Dark' value={stakeDeposit} placeholder='0'\n                onChange={(e) => {setStakeStep(1); setStakeDeposit(e.target.value)}} />\n              <br/>\n              <p>Your current balance is <strong>{balance > 0 ? (balance / 1).toFixed(2) : 0}</strong></p>\n              <Button size='large' disabled={!wallet.connected} className='ApproveButton Button Dark' type='ghost' onClick={approveStake}>Approve</Button>\n            </Card>\n          </div>\n        </Col>\n      </> :\n      <Col span={12} className='Cards'>\n        <Card className='Card Dark' title={CHERUB.symbol} bordered={false}\n          extra={<a href='/#/stake' className='CardLink' onClick={() => setStakeCard('stake')}>Stake</a>}>\n        </Card>\n      </Col>\n      }\n      <Col span={6}></Col>\n    </Row>\n  );\n\n  const daoView = (\n    <>\n      { daoCard === 'statistics' ?\n      <Row>\n        <Col span={2}></Col>\n        <Col span={20} className='Cards'>\n          <div className='site-card-border-less-wrapper'>\n            <Card className='Card Dark' title='DAO' bordered={false} extra={<a href='/#/dao' className='CardLink' onClick={() => setDAOCard('vote')}>Vote</a>}>\n              <Row>\n                <Col span={6}>\n                  <p>Market Cap</p>\n                  <Title level={3} className='Title Dark'>{cMarketCap}</Title>\n                </Col>\n                <Col span={6}>\n                  <p>{CHERUB.symbol} Price</p>\n                  <Title level={3} className='Title Dark'>{cCurrentPrice}</Title>\n                </Col>\n                <Col span={6}>\n                  <p>Circulating Supply (Total)</p>\n                  <Title level={3} className='Title Dark'>{cCirculatingSupplyTotal}</Title>\n                </Col>\n                <Col span={6}>\n                  <p>Markets</p>\n                  <Title level={3} className='Title Dark'>{tokenCount}</Title>\n                </Col>\n              </Row>\n              <br/>\n              <Row>\n                <Col span={12}>\n                  <p>Total Value Deposited</p>\n                  <Line height={100} data={tvdData} options={chartOptions}/>\n                </Col>\n                <Col span={12}>\n                  <p>Market Value of Treasury Assets</p>\n                  <Line height={100} data={treasuryData} options={chartOptions}/>\n                </Col>\n              </Row>\n            </Card>\n          </div>\n        </Col>\n        <Col span={2}></Col>\n      </Row> :\n      <Row>\n        <Col span={2}></Col>\n        <Col span={20} className='Cards'>\n          <div className='site-card-border-less-wrapper'>\n            <Card className='Card Dark' title='DAO' bordered={false}\n              extra={<a href='/#/dao' className='CardLink' onClick={(e) => setDAOCard('statistics')}>Statistics</a>}>\n              <List itemLayout='horizontal' dataSource={daoProposals} renderItem={item => (<List.Item><List.Item.Meta title={item.title} description={item.description} />{item.icon}</List.Item>)}/>\n            </Card>\n          </div>\n        </Col>\n        <Col span={2}></Col>\n      </Row>\n      }\n    </>\n  );\n\n  useEffect(() => {\n    // TODO: This fires every second, minimize this\n    getBalanceCallback();\n    getDashboardDataCallback();\n    getFactoryDataCallback();\n\n    if (!isInverseDataSet) {\n      setIsInverseSet(true);\n      setCurrentExchange(accounts.exchanges.find((x) => x.symbol === DEFAULT_SYMBOL));\n      getInverseDataCallback(DEFAULT_SYMBOL);\n    }\n  }, [getBalanceCallback, getDashboardDataCallback, getFactoryDataCallback, getInverseDataCallback, isInverseDataSet, currentExchange.token,\n    currentExchange.accountV]);\n\n  useEffect(() => {\n    setMenu(getWindowRoute());\n  }, [setMenu]);\n\n  useEffect(() => {\n    getProviderCallback().then(function(provider) {\n      if (!blockHeightInterval) {\n        try {\n          setBlockHeightInterval(true);\n          setInterval(function () {\n            provider.connection.getEpochInfo().then(function(epochInfo) {\n              setBlockHeight(epochInfo.blockHeight);\n            });\n          }, 10000);\n        } catch (e) {\n          networkErrorMessage();\n        }\n      }\n    });\n  }, [blockHeightInterval, getProviderCallback]);\n\n  useEffect(() => {\n    if (!countdownInterval) {\n      try {\n        setCountdownInterval(true);\n        setInterval(function () {\n          calculateCountdown();\n        }, 1000);\n      } catch (e) {\n        networkErrorMessage();\n      }\n    }\n  }, [countdownInterval, setCountdownInterval]);\n\n  return (\n    <Layout className='App Dark'>\n      { showBanner ?\n      <Alert type='info' className='Banner' message=<span>You are currently using an unaudited piece of software via {network}. Use at your own risk.\n      </span> /> : null\n      }\n      <Header className='Header Dark'>\n        <Row>\n          <Col span={5}>\n            <div className='Logo Dark'>\n              <img src='/logo.svg' alt='Logo' className='LogoImage'/>\n              <strong className='LogoText' onClick={() => window.open(githubUrl, '_blank')}>{logoText}</strong>\n            </div>\n          </Col>\n          <Col span={14} className='ColCentered'>\n            <Menu className='Menu Dark' onClick={(e) => {setMenu(e.key); window.location.href = '/#/' + e.key}} selectedKeys={[menu]}\n              mode='horizontal'>\n              <Menu.Item key='dao'>DAO</Menu.Item>\n              <Menu.Item key='inverse'>Inverse Perpetuals</Menu.Item>\n              <Menu.Item key='bond'>Bond</Menu.Item>\n              <Menu.Item key='stake' onClick={() => {setInverseAsset(CHERUB.symbol)}}>Stake</Menu.Item>\n            </Menu>\n          </Col>\n          <Col span={5} className='ConnectWalletHeader'>\n            { !wallet.connected ?\n            <>\n              <WalletMultiButton className='WalletMultiButton'/>\n              <Button className='ConnectWalletButton' onClick={(e) => document.getElementsByClassName('WalletMultiButton')[0].click()} type='link'>Connect Wallet</Button>\n            </> :\n            <Button className='ConnectWalletButton' type='link'>\n              <code className='SolCount'>{balance > 0 ? (balance / 1).toFixed(2) : 0 } {inverseAsset}</code>\n              <code>{wallet.publicKey.toString().substr(0, 4)}...{wallet.publicKey.toString().substr(-4)}</code>\n            </Button>\n            }\n            <Dropdown className='Dropdown SettingsDropdown' overlay={settingsMenu}><SettingOutlined/></Dropdown>\n          </Col>\n        </Row>\n      </Header>\n      <Layout className='Layout Dark'>\n        <Content>\n          <div>\n            <br/>\n            <br/>\n            { menu === 'inverse' ? inverseView : null }\n            { menu === 'stake' ? stakeView : null }\n            { menu === 'bond' ? bondView : null }\n            { menu === 'dao' ? daoView : null }\n          </div>\n        </Content>\n      </Layout>\n      <Footer className='Footer'><code className='BlockHeight'><small>• {blockHeight}</small></code></Footer>\n      <Modal title='Assets' footer={null} visible={isInverseAssetModalVisible} onCancel={() => {setIsInverseAssetModalVisible(false)}}>\n        <List itemLayout='horizontal' dataSource={accounts.exchanges} forcerender='true'\n          renderItem={exchange => (\n            <List.Item className='Asset ListItem'>\n              <List.Item.Meta title={exchange.symbol}\n                onClick={() => {setInverseAsset(exchange.symbol); getInverseData(exchange.symbol); setIsInverseAssetModalVisible(false);\n                  setCurrentExchange(accounts.exchanges.find((x) => x.symbol === exchange.symbol)); }}/>\n            </List.Item>)}/>\n          </Modal>\n        </Layout>\n  );\n}\n\nconst AppWithProvider = () => (\n  <ConnectionProvider endpoint={network}>\n    <WalletProvider wallets={wallets} autoConnect>\n      <WalletModalProvider>\n        <App/>\n      </WalletModalProvider>\n    </WalletProvider>\n  </ConnectionProvider>\n);\n\nexport default AppWithProvider;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}